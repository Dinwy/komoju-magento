<?php

namespace Komoju\Payments\Controller\HostedPage;

use Magento\Framework\App\ObjectManager;
use Magento\Sales\Model\Order;
use Magento\Framework\Exception\AuthorizationException;
use Magento\Framework\Controller\ResultFactory;

/**
 * The Cancel endpoint is created as part of the Komoju Hosted Page URL as the
 * cancel_url param, to specifically mark the order as cancelled when the customer
 * decides to not to proceed with the payment. Because the Redirect URL marks the
 * order as 'pending_payment' if there wasn't a way to specifically indicate that
 * the order was cancelled then it would be stuck in this state, despite the
 * customer never being able to complete it. To prevent this endpoint from being
 * used maliciously the Redirect endpoint is generating a HMAC and appending it to
 * the cancel URL, which is being used to ensure that the request hasn't been
 * tampered with.
 */
class Cancel extends \Magento\Framework\App\Action\Action {

    const HMAC_PARAM_KEY = 'hmac';

    /**
     * @var \Magento\Framework\Controller\ResultFactory
     */
    protected $_resultFactory;
    
    /**
     * @var \Magento\Sales\Api\OrderRepositoryInterface
     */
    private $orderRepository;

    /**
     * @var \Psr\Log\LoggerInterface
     */
    private $logger;

    /**
     * @var \Komoju\Payments\Gateway\Config\Config
     */
    private $config;

    /**
     * @var \Magento\Sales\Model\Order|false
     */
    private $order = false;


    public function __construct(
        \Magento\Framework\App\Action\Context $context,
        \Magento\Framework\Controller\ResultFactory $resultFactory,
        \Magento\Sales\Api\OrderRepositoryInterface $orderRepository,
        \Komoju\Payments\Gateway\Config\Config $config,
        \Psr\Log\LoggerInterface $logger = null
    ) {
        $this->logger = $logger ?: ObjectManager::getInstance()->get(\Psr\Log\LoggerInterface::class);
        $this->_resultFactory = $resultFactory;
        $this->orderRepository = $orderRepository;
        $this->config = $config;

        return parent::__construct($context);
    }
    
    public function execute() {
        if (!$this->isHmacValid()) {
            $this->logger->info('HMAC param does not match expected value, exiting.');    
            $result = $this->_resultFactory->create(ResultFactory::TYPE_RAW);
            $result->setHttpResponseCode(401);
            $result->setContents('hmac parameter is not valid');

            return $result;
        };
        
        $orderId = $this->getRequest()->getParam('order_id');
        $order = $this->getOrder($orderId);
        
        if ($this->orderCanBeCancelled($order)) {    
            $this->logger->info('Cancelling order for order id: ' . $orderId);
    
            $order->setState(Order::STATE_CANCELED);
            $order->setStatus(Order::STATE_CANCELED);
            $order->save();
    
            $this->logger->info('Order cancelled for order id: ' . $orderId);
        } else {
            $this->logger->info('Order is not in cancellable state. Redirecting without it. Order id: ' . $orderId);
        }


        $resultRedirect = $this->_resultFactory->create(ResultFactory::TYPE_REDIRECT);
        $resultRedirect->setUrl($this->_url->getUrl('/'));

        return $resultRedirect;
    }

    /**
     * Gets the order resource that matches the orderId passed into the URL
     * @var int $orderId
     * @return \Magento\Sales\Model\Order
     */
    private function getOrder($orderId) {
        return $this->orderRepository->get($orderId);
    }

    /**
     * Checks to ensure that the hmac param is valid. Since this endpoint
     * has the ability to cancel orders it's important that any requests to
     * it ensure that the URL was generated by the Komoju plugin and have not
     * been modified
     * @return bool
     */
    private function isHmacValid() {
        $requestParams = $this->getRequest()->getParams();
        $hmacParam = rtrim($requestParams['hmac'], "/");
        unset($requestParams[self::HMAC_PARAM_KEY]);
        $secretKey = $this->config->getSecretKey();

        $queryString = http_build_query($requestParams);
        $urlForComp = 'komoju/hostedpage/cancel' . '?' . $queryString;
        $calculatedHmac = hash_hmac('sha256', $urlForComp, $secretKey);
        
        return hash_equals($hmacParam, $calculatedHmac);
    }

    /**
     * Checks to see if the order can be cancelled. Magento has it's own inbuilt
     * methods for this, but they don't quite match what we consider to be 
     * "cancellable" as we deviate from the typical order flow since we need to
     * redirect users to an external page to capture payment
     * @return bool
     */
    private function orderCanBeCancelled($order) {
        return ($order->getState() == Order::STATE_CANCELED || $order->getState() == Order::STATE_PENDING_PAYMENT);
    }
}