{
  "version": 3,
  "sources": ["../src/shared/validation.ts", "../src/shared/komoju-i18n-element.ts", "../src/shared/money.ts", "../src/shared/komoju-api.ts", "../src/shared/themable.ts", "../src/generated/env.ts", "../src/generated/supported-payment-types.ts", "../src/shared/translations.ts", "../src/i18n.ts", "../src/shared/message-broker.ts", "../src/komoju-host-element.ts", "../src/shared/komoju-error-element.ts", "../src/shared/komoju-fade-element.ts", "../src/fields-iframe.ts"],
  "sourcesContent": ["// Adds validation to an input element.\nexport function addValidation<Translations extends I18n>(\n  _i18n: Translations, // Used only by typescript to compile-time catch missing translations.\n  input: HTMLInputElement,\n  callback: (input: HTMLInputElement) => keyof Translations['en'] | null\n) {\n  // Add a class so that we know this input has validation.\n  input.classList.add('has-validation');\n\n  // Tiny detail: if the user has never inputted anything, we don't want to run validations at all\n  // at the risk of showing an error message when the user is just clicking around.\n  input.addEventListener('input', () => {\n    input.dataset.validationDirty = 'true';\n  });\n\n  // Validation function. This will be called on 'blur' and also on a custom 'validate' event.\n  const validate = (event: Event) => {\n    const input = event.target as HTMLInputElement;\n\n    const errorMessageKey = callback(input);\n\n    if (errorMessageKey) {\n      showError(_i18n, input, errorMessageKey);\n    }\n  };\n  input.addEventListener('blur', (event) => {\n    if (input.dataset.validationDirty !== 'true') return;\n    else return validate(event);\n  });\n  input.addEventListener('validate', validate);\n\n  // When the user focuses on the input, remove all error artifacts.\n  input.addEventListener('focus', (event) => {\n    const input = event.target as HTMLInputElement;\n    clearErrors(input);\n  });\n}\n\nexport function showError<Translations extends I18n>(\n  _i18n: Translations, // Used only by typescript to compile-time catch missing translations.\n  input: HTMLInputElement,\n  messageKey: keyof Translations['en']\n) {\n  input.classList.add('invalid');\n  const key = messageKey as string;\n\n  // We don't want to show the same error twice!\n  const container = input.parentElement;\n  const dupeSelector = `komoju-error:not(.removing) > komoju-i18n[key=\"${key}\"]`;\n  if (container?.querySelector(dupeSelector)) {\n    return;\n  }\n\n  container?.append(createErrorElement(messageKey as string));\n}\n\nexport function clearErrors(input: HTMLInputElement) {\n  input.classList.remove('invalid');\n  input.parentElement?.querySelectorAll('komoju-error:not(.removing)').forEach((element) => {\n    element.remove();\n  });\n}\n\n// Runs validations on an <input> element.\nexport function runValidation(input: HTMLInputElement) {\n  // Fire the 'validate' custom event.\n  input.dispatchEvent(new CustomEvent('validate'));\n\n  // If there's an error message, return it.\n  const errorMessage = input.parentElement?.querySelector('komoju-error:not(.removing)')?.textContent;\n  return errorMessage ?? null;\n}\n\n// Creates the error message element that appears under an invalid input.\n// Mainly just called by addValidation().\nexport function createErrorElement(messageKey: string) {\n  const el = window.document.createElement('komoju-error');\n  const i18nEl = window.document.createElement('komoju-i18n') as KomojuI18nElement;\n  i18nEl.key = messageKey;\n  el.appendChild(i18nEl);\n  return el;\n}\n", "// Language gets stored in here, mostly controlled by <komoju-fields>.\ndeclare let window: WindowWithKomojuGlobals;\n\nconst defaultLanguage = 'en';\n\ntype Queryable = {\n  querySelectorAll: Document['querySelectorAll'];\n};\n\nexport function broadcastLocaleChange(root: Queryable, locale: string) {\n  root.querySelectorAll('komoju-i18n').forEach((element) => {\n    const i18n = element as KomojuI18nElement;\n    i18n.render(locale);\n  });\n}\n\n// This is a <komoju-i18n> element that we use internally for displaying translated text\nexport default class KomojuI18nElement extends HTMLElement {\n  static get observedAttributes() {\n    return ['key'];\n  }\n\n  // Attribute: key\n  // The key of the translation to display.\n  get key() {\n    return this.getAttribute('key');\n  }\n  set key(value) {\n    this.setAttribute('key', value ?? '');\n  }\n\n  connectedCallback() {\n    this.render();\n  }\n\n  attributeChangedCallback(name: string, _oldValue: string, _newValue: string) {\n    if (name === 'key') this.render();\n  }\n\n  // Search up the DOM until we find a parent element with a locale attribute.\n  findLocale() {\n    let parent = this.parentElement;\n    while (parent && !parent.getAttribute('locale')) {\n      parent = parent.parentElement;\n    }\n    return parent?.getAttribute('locale') ?? defaultLanguage;\n  }\n\n  render(locale?: string) {\n    if (!this.key) return;\n\n    if (!locale) locale = this.findLocale();\n    if (!Object.keys(window.komojuTranslations).includes(locale)) locale = defaultLanguage;\n\n    const lang = locale.substring(0, 2);\n\n    const message = window.komojuTranslations[lang][this.key];\n    if (!message) {\n      console.error(`KOMOJU bug: missing translation for key: ${this.key}`);\n      return;\n    }\n\n    // Perform interpolation\n    const matches = message.match(/%\\{[\\w-]+\\}/g);\n    if (matches) {\n      let result = message;\n      matches.forEach((match) => {\n        const key = match.replace(/%{|}/g, '');\n        const value = this.dataset[key];\n        if (value) result = result.replace(match, value);\n      });\n      this.textContent = result;\n      return;\n    }\n\n    this.textContent = message;\n  }\n}\n", "export const noDecimalCurrencies = [\n  'BIF', // Burundian Franc\n  'CLP', // Chilean Peso\n  'DJF', // Djiboutian Franc\n  'GNF', // Guinean Franc\n  'JPY', // Japanese Yen\n  'KMF', // Comorian Franc\n  'KRW', // South Korean Won\n  'MGA', // Malagasy Ariary\n  'PYG', // Paraguayan Guaran\u00ED\n  'RWF', // Rwandan Franc\n  'UGX', // Ugandan Shilling\n  'VND', // Vietnamese \u0110\u1ED3ng\n  'VUV', // Vanuatu Vatu\n  'XAF', // Central African Cfa Franc\n  'XOF', // West African Cfa Franc\n  'XPF', // Cfp Franc\n];\n\n// Currently modern browsers depend on ISO 4217\n//\n// We do support non-fiat currencies which are not part of the\n// ISO standard and require us to build formatters for\nconst nonISOCurrencies = [\n  'USDC'\n]\n\nconst displayCurrencyCodeInsteadOfSymbol = [\n  'CNY',\n];\n\nexport function formatMoney(amountCents: number, currency: string, locale: string = 'en') {\n  function nonISOFormat(currency: string, amountCents: number) {\n    if (!amountCents) {\n      return '';\n    } else if (nonISOCurrencies.includes(currency) || !currency) {\n      return `${amountCents.toLocaleString()} ${currency}`;\n    } else {\n      throw 'invalid currency format';\n    }\n  }\n\n  const amountDecimal = decentify(amountCents, currency);\n\n  if (nonISOCurrencies.includes(currency) || !currency) {\n    return nonISOFormat(currency, amountDecimal)\n  } else {\n    const numberFormat = new Intl.NumberFormat(`${locale}-JP`, {\n      style: 'currency',\n      currency: currency,\n      currencyDisplay: displayCurrencyCodeInsteadOfSymbol.includes(currency) ? \"code\" : \"symbol\"\n    });\n\n    return numberFormat.format(amountDecimal);\n  }\n};\n\nexport function decentify(amountCents: number, currency: string) {\n  return noDecimalCurrencies.includes(currency) ? amountCents : amountCents / 100.0;\n}\n", "// fetch wrapper with KOMOJU authentication already handled.\nexport function komojuFetch(\n  config: {\n    komojuApi: string,\n    publishableKey: string | null,\n  },\n  method: 'GET' | 'POST',\n  path: string,\n  body?: object\n): Promise<Response> {\n  if (!config.komojuApi) throw new Error('KOMOJU API URL is null');\n  if (!config.publishableKey) throw new Error('KOMOJU publishable-key not set');\n\n  return fetch(`${config.komojuApi}${path}`, {\n    method,\n    headers: {\n      accept: 'application/json',\n      'content-type': 'application/json',\n      authorization: `Basic ${btoa(`${config.publishableKey}:`)}`,\n      'komoju-via': 'fields',\n    },\n    body: body ? JSON.stringify(body) : undefined\n  });\n}\n", "export default class Themable extends HTMLElement {\n  // Attribute: theme\n  // CSS file to use as a theme.\n  get theme() {\n    return this.getAttribute('theme');\n  }\n  set theme(value) {\n    this.setAttribute('theme', value ?? '');\n  }\n\n  applyTheme() {\n    const root = this.shadowRoot ?? document;\n\n    if (this.theme === null) {\n      root.querySelectorAll('#theme,#inline-theme').forEach(el => el.remove());\n    } else if (this.theme.startsWith('http') || this.theme.startsWith('/') || this.theme.startsWith('data:')) {\n      this.applyExternalTheme(root, this.theme);\n    } else {\n      this.applyInlineTheme(root, this.theme);\n    }\n  }\n\n  applyInlineTheme(root: ParentNode, theme: string) {\n    root.querySelectorAll('#theme,#inline-theme').forEach(el => el.remove());\n\n    const style = document.createElement('style');\n    style.id = 'inline-theme';\n    style.textContent = theme;\n    this.appendStyleTag(style);\n  }\n\n  applyExternalTheme(root: ParentNode, theme: string) {\n    root.querySelectorAll('#inline-theme').forEach(el => el.remove());\n    let link = root.querySelector('#theme') as HTMLLinkElement | null;\n    if (link) {\n      if (link.href !== this.theme) link.href = theme;\n    } else {\n      link = document.createElement('link');\n      link.id = 'theme';\n      link.rel = 'stylesheet';\n      link.href = theme;\n      this.appendStyleTag(link);\n    }\n  }\n\n  appendStyleTag(style: HTMLLinkElement | HTMLStyleElement) {\n    if (this.shadowRoot) {\n      this.shadowRoot.append(style);\n    }\n    else {\n      document.head.append(style);\n    }\n  }\n}\n", "// Generated by bin/generate.sh\n//\n// This file pulls from environment variables (and git).\n\nexport default {\n  \"CDN\": \"https://multipay.komoju.com\",\n  \"ENV\": \"development\",\n  \"HONEYBADGER_API_KEY\": \"\",\n  \"GIT_REV\": \"99ad2eb29ce6530dedfe3a0ec34aea970dbaa78a\",\n};\n", "// Generated by bin/generate.sh\n//\n// List of supported payment types comes from the folders in src/fields/*.\n// To add a new one, simply add a new folder.\n\nconst supported: Set<string> = new Set();\nsupported.add('bank_transfer');\nsupported.add('credit_card');\nsupported.add('konbini');\nsupported.add('offsite');\nexport default supported;\n", "declare let window: WindowWithKomojuGlobals;\n\n// Call this to add messages to the registry.\n// Individual payment method modules can do this to add their own messages.\n// That way, we avoid needing to load all messages for every payment method upfront.\nexport function registerMessages(messages: I18n) {\n  if (!window.komojuTranslations) {\n    window.komojuTranslations = { 'en': {}, 'ja': {} };\n  }\n\n  for (const lang of Object.keys(window.komojuTranslations)) {\n    window.komojuTranslations[lang] = {\n      ...window.komojuTranslations[lang],\n      ...messages[lang],\n    };\n  }\n}\n", "export const en = {\n  'customer-fee-will-be-charged': 'A fee of %{fee} will be included.',\n  'dynamic-currency-notice': 'Payment will be made in %{currency}: %{original} \u2192 %{converted}.',\n  'dynamic-currency-notice-with-fee': 'Payment will be made in %{currency}: %{original} \u2192 %{converted}. (total: %{total})',\n  'payment-method-unavailable': 'This payment method is currently unavailable.',\n  'verification-failed': 'Verification failed.',\n  'close': 'Close',\n};\n\nexport const ja: typeof en = {\n  'customer-fee-will-be-charged': '%{fee}\u306E\u624B\u6570\u6599\u304C\u8FFD\u52A0\u3055\u308C\u307E\u3059\u3002',\n  'dynamic-currency-notice': '\u652F\u6255\u3044\u306F%{currency}\u3067\u6C7A\u6E08\u3055\u308C\u307E\u3059: %{original} \u2192 %{converted}\u3002',\n  'dynamic-currency-notice-with-fee': '\u652F\u6255\u3044\u306F%{currency}\u3067\u6C7A\u6E08\u3055\u308C\u307E\u3059: %{original} \u2192 %{converted}\u3002(\u5408\u8A08%{total})',\n  'payment-method-unavailable': '\u3053\u306E\u652F\u6255\u3044\u65B9\u6CD5\u306F\u73FE\u5728\u3054\u5229\u7528\u3044\u305F\u3060\u3051\u307E\u305B\u3093\u3002',\n  'verification-failed': '\u8A8D\u8A3C\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002',\n  'close': '\u9589\u3058\u308B',\n};\n", "export interface Message {\n  type: string,\n}\nexport interface FullMessage extends Message {\n  brokerId: string,\n  id: string,\n}\n\ninterface MessageAck extends FullMessage {\n  type: 'ack',\n  response?: Message,\n}\n\ntype MessageBrokerArgs = { send: Window, receive: Window };\n\ntype TypedMessageListener<T extends Message> = (arg: T) => Promise<Message | undefined | void> | Message | undefined | void;\ntype MessageListener = TypedMessageListener<Message>;\n\n// Wrapper around postMessage events that lets us use promises instead of\n// disjoint \"send\" and \"receive\" flows.\nexport class MessageBroker {\n  // Keep track of which window to send to and which to receive on.\n  // These are promises so that we can effectively buffer messages until the window is ready.\n  _sendWindow: Promise<Window>;\n  _receiveWindow: Promise<Window>;\n  _setSendWindow?: (value: Window) => void;\n  _setReceiveWindow?: (value: Window) => void;\n\n  // Raw \"message\" event listener. We need to keep track of this so we can remove it later.\n  messageHandler: (event: MessageEvent) => void;\n\n  // Map of in-progress promises. When we receive an ack message with a matching id, we resolve the promise.\n  promises: Map<string, {\n    promise: Promise<Message | undefined>,\n    resolve: (value?: Message) => void,\n  }>;\n\n  // Map of listeners. When we receive a message with a matching type, we call the listener.\n  listeners: Map<string, MessageListener>;\n\n  // Unique id for this broker. Used to distinguish messages from other brokers.\n  id: string;\n\n  origin: string;\n\n  constructor(id?: string) {\n    this._sendWindow = new Promise(resolve => this._setSendWindow = resolve);\n    this._receiveWindow = new Promise(resolve => this._setReceiveWindow = resolve);\n\n    this.messageHandler = event => {\n      if (this.origin !== '*' && event.origin !== this.origin) return;\n      this.handleMessage(event);\n    };\n\n    this.id = id ?? crypto.randomUUID();\n    this.origin = '*';\n    this.promises = new Map();\n    this.listeners = new Map();\n  }\n\n  // Call this to set up the broker\n  setup(arg: MessageBrokerArgs) {\n    if (this._setSendWindow) {\n      this._setSendWindow(arg.send);\n      this._setSendWindow = undefined;\n    } else {\n      this._sendWindow = Promise.resolve(arg.send);\n    }\n\n    if (this._setReceiveWindow) {\n      this._setReceiveWindow(arg.receive);\n      this._setReceiveWindow = undefined;\n    } else {\n      this._receiveWindow = Promise.resolve(arg.receive);\n    }\n\n    arg.receive.addEventListener('message', this.messageHandler);\n  }\n\n  // Call this to send a message. Promise will resolve when the associated ack message\n  // comes back.\n  send<MessageType extends Message>(message: MessageType): Promise<Message | undefined> {\n    const fullMessage: FullMessage = {\n      ...message,\n      brokerId: this.id,\n      id: crypto.randomUUID(),\n    };\n\n    let resolve: ((value?: Message) => void) | null = null;\n    const promise = new Promise<Message | undefined>((resolvePromise, _reject) => {\n      resolve = resolvePromise;\n    });\n    if (!resolve) throw new Error('Broker is busted');\n\n    this.promises.set(fullMessage.id, { promise, resolve });\n    return this._sendWindow.then(w => w.postMessage(fullMessage, this.origin)).then(() => promise);\n  }\n\n  // Call this to set the listener for a certain event. Kind of like the built-in\n  // addEventListener, but can only add one per event type.\n  receive<MessageType extends Message>(type: MessageType['type'], listener: TypedMessageListener<MessageType>) {\n    this.listeners.set(type, listener as MessageListener);\n  }\n\n  // Internal message handler\n  async handleMessage(event: MessageEvent<FullMessage>) {\n    const message = event.data;\n\n    // Ignore messages from other brokers\n    if (message.brokerId !== this.id) return;\n\n    // 'ack' messages resolve an in-progress promise\n    if (message.type === 'ack') {\n      const ack = message as MessageAck;\n      const promise = this.promises.get(ack.id);\n\n      // Acks with a wrong ID typically come from another <komoju-fields> tag\n      // in the same window.\n      if (!promise) return;\n\n      promise.resolve(ack.response);\n      this.promises.delete(ack.id);\n    }\n    // all other messages trigger a local listener if present\n    else {\n      const listener = this.listeners.get(message.type);\n      const ack: MessageAck = { type: 'ack', brokerId: this.id, id: message.id };\n      if (listener) ack.response = (await listener(message)) ?? undefined;\n      await this._sendWindow.then(w => w.postMessage(ack, this.origin));\n    }\n  }\n\n  // Call this to clean up the window event listener\n  destroy() {\n    return this._receiveWindow.then(w => w.removeEventListener('message', this.messageHandler));\n  }\n}\n", "import spinner from './shared/spinner.html';\nimport { runValidation } from './shared/validation';\nimport KomojuI18nElement, { broadcastLocaleChange } from './shared/komoju-i18n-element';\nimport { formatMoney } from './shared/money';\nimport { komojuFetch } from './shared/komoju-api';\nimport Themable from './shared/themable';\nimport ENV from './generated/env';\nimport supportedPaymentTypes from './generated/supported-payment-types';\n\nimport { registerMessages } from './shared/translations';\nimport * as i18n from './i18n';\nimport { MessageBroker } from './shared/message-broker';\nregisterMessages(i18n);\n\nlet _baseKomojuAPI: string | undefined;\nfunction baseKomojuAPI() {\n  if (_baseKomojuAPI) return _baseKomojuAPI;\n\n  const url = new URL(window.location.href);\n  const params = new URLSearchParams(url.hash.slice(1));\n  _baseKomojuAPI = params.get('api') ?? 'https://komoju.com';\n  return _baseKomojuAPI;\n}\n\nfunction brokerId() {\n  const url = new URL(window.location.href);\n  const params = new URLSearchParams(url.hash.slice(1));\n  return params.get('broker') ?? undefined;\n}\n\nfunction i18nMessage(locale: string | null, key: keyof typeof i18n['en']): string | undefined {\n  if (locale === 'ja') return (i18n.ja as any)[key];\n  return (i18n.en as any)[key];\n}\n\nexport default class KomojuHostElement extends Themable implements KomojuFieldsConfig {\n  static get observedAttributes() {\n    console.log('KomojuHostElement::listenToMessagesFromMainWindow');\n\n    return [\n      'komoju-api',\n      'session',\n      'session-id',\n      'publishable-key',\n      'payment-type',\n      'locale',\n      'theme',\n      'token',\n      'name',\n    ];\n  }\n\n  // 'session' is also an attribute. Set the 'session' attribute to a stringified JSON of\n  // the entire KOMOJU sesion to skip having to fetch it from KOMOJU again.\n  _session: KomojuSession | null = null\n  get session() {\n    return this._session;\n  }\n  set session(value) {\n    console.log('KomojuHostElement set session', value);\n\n    this._session = value;\n    this.broker.send<KomojuDispatchEvent>({\n      type: 'dispatch-event',\n      name: 'komoju-session-change',\n      detail: { session: this._session }\n    });\n  }\n\n  module: {\n    render: KomojuRenderFunction,\n    paymentDetails: KomojuPaymentDetailsFunction\n  } | null = null\n\n  // Attribute: komoju-api\n  // Usually this'll just be https://komoju.com, but sometimes we use other URLs.\n  get komojuApi() {\n    const attribute = this.getAttribute('komoju-api');\n    if (!attribute || attribute === '') return baseKomojuAPI();\n    else return attribute;\n  }\n  set komojuApi(value) {\n    this.setAttribute('komoju-api', value ?? '');\n  }\n\n  // Attribute: session-id\n  // KOMOJU Session ID. Create your session on the server then pass it in here.\n  get sessionId() {\n    return this.getAttribute('session-id');\n  }\n  set sessionId(value) {\n    this.setAttribute('session-id', value ?? '');\n  }\n\n  // Attribute: publishable-key\n  // KOMOJU publishable key. Get this from your merchant dashboard.\n  get publishableKey() {\n    return this.getAttribute('publishable-key');\n  }\n  set publishableKey(value) {\n    this.setAttribute('publishable-key', value ?? '');\n  }\n\n  // Attribute: payment-type\n  // Which payment type to show. If your session only has 1 payment type, this is unnecessary.\n  // Alternatively, if a <komoju-picker> element is present, this will be set automatically.\n  get paymentType() {\n    return this.getAttribute('payment-type');\n  }\n  set paymentType(value) {\n    this.setAttribute('payment-type', value ?? '');\n  }\n\n  // Attribute: locale\n  // Language of text to show. Defaults to the browser's language.\n  get locale() {\n    return this.getAttribute('locale');\n  }\n  set locale(value) {\n    this.setAttribute('locale', value ?? '');\n    this.broker.send<KomojuDispatchEvent>({\n      type: 'dispatch-event',\n      name: 'komoju-locale-change',\n      detail: { locale: value }\n    });\n  }\n\n  // Attribute: token\n  // Boolean attribute - if present, will generate a token instead of processing payment.\n  get token() {\n    return this.hasAttribute('token');\n  }\n  set token(value) {\n    if (value) this.setAttribute('token', '');\n    else this.removeAttribute('token');\n  }\n\n  // Attribute: name\n  // Similar to an input's name attribute. This is used in token mode, and is the name of the\n  // input that will contain the token.\n  get name() {\n    return this.getAttribute('name');\n  }\n  set name(value) {\n    if (value) this.setAttribute('name', value);\n    else this.removeAttribute('name');\n  }\n\n  // Where to fetch payment method modules.\n  get komojuCdn() {\n    return ENV['CDN'];\n  }\n\n  get paymentMethod() {\n    return this.session?.payment_methods.find(method => method.type === this.paymentType);\n  }\n\n  resizeObserver?: ResizeObserver;\n\n  broker: MessageBroker = new MessageBroker(brokerId());\n\n  // Reactive attribute handling. When session or payment type is changed, we want to re-render.\n  async attributeChangedCallback(name: string, oldValue: string | null, newValue: string | null) {\n    console.log('??? KomojuHostElement attributeChangedCallback', name, oldValue);\n    console.log('###')\n    console.log('NEW VALUE::KomojuHostElement attributeChangedCallback', name, newValue);\n\n    if (name === 'session') {\n      if (!newValue || newValue == '') return;\n\n      this.session = JSON.parse(newValue);\n      if (!this.locale) this.locale = this.session!.default_locale.substring(0, 2);\n      if (!this.paymentType) this.paymentType = this.session!.payment_methods[0].type;\n      this.render();\n    }\n    else if (name === 'session-id' || name === 'publishable-key') {\n      if (!newValue || newValue == '') return;\n\n      // Session ID and publishable key are both required to fetch a session, so when either\n      // one changes, we re-fetch the session.\n      if (!this.publishableKey) return;\n      if (!this.sessionId) return;\n\n      const response = await this.komojuFetch('GET', `/api/v1/sessions/${this.sessionId}`);\n\n      if (response.status === 404) {\n        console.error('Invalid KOMOJU session ID', this.sessionId);\n        return;\n      }\n\n      if (response.status !== 200) {\n        console.error('Failed to retrieve KOMOJU session', response);\n        return;\n      }\n\n      this.session = await response.json();\n      if (!this.session) throw new Error('KOMOJU returned a null session');\n      if (!this.paymentType) this.paymentType = this.session.payment_methods[0].type;\n      if (!this.locale) this.locale = this.session.default_locale.substring(0, 2);\n\n      this.render();\n    }\n    else if (name === 'payment-type') {\n      if (!newValue || newValue == '') return;\n      if (!this.session) return;\n      if (!this.publishableKey) return;\n      this.startFade();\n      await this.render();\n    }\n    else if (name === 'locale') {\n      if (!newValue || newValue == '' || oldValue === newValue) return;\n      broadcastLocaleChange(this, newValue);\n    }\n    else if (name === 'theme') {\n      this.applyTheme();\n    }\n  }\n\n  connectedCallback() {\n    console.log('KomojuHostElement connectedCallback')\n    // We start by just showing a spinner.\n    this.innerHTML = spinner;\n    console.log(`${JSON.stringify(this.broker)}, broker`)\n\n    // Set up message broker to communicate with the parent window.\n    this.listenToMessagesFromMainWindow(this.broker);\n    this.broker.setup({\n      send: window.parent,\n      receive: window,\n    });\n\n    // Set up resize observer so that the iframe can resize itself.\n    const body = this.ownerDocument?.body;\n    this.resizeObserver = new ResizeObserver(() => {\n      const height = body.parentElement!.offsetHeight;\n      if (height === 0) return;\n      this.broker.send<KomojuMessageResize>({ type: 'resize', height: height.toString() });\n    });\n    if (body) this.resizeObserver.observe(body, { box: 'border-box' });\n  }\n\n  disconnectedCallback() {\n    this.broker.destroy();\n    this.resizeObserver?.disconnect();\n    this.resizeObserver = undefined;\n  }\n\n  listenToMessagesFromMainWindow(broker: MessageBroker) {\n    console.log('KomojuHostElement listenToMessagesFromMainWindow');\n\n    // Sync attributes from parent window.\n    broker.receive<KomojuMessageAttr>('attr', (message) => {\n      // Avoid XSS by restricting which attrs we're willing to receive.\n      if (!KomojuHostElement.observedAttributes.includes(message.attr)) return;\n\n      console.log('KomojuHostElement listenToMessagesFromMainWindow attr', message);\n\n      if (message.value === null || message.value === undefined) this.removeAttribute(message.attr);\n      else this.setAttribute(message.attr, message.value);\n    });\n\n    // Submit when parent komoju-fields element's submit function is called.\n    broker.receive<KomojuMessageSubmit>('submit', () => {\n      return this.submit();\n    });\n\n    // Expose the endFade function.\n    broker.receive<{ type: 'end-fade' }>('end-fade', () => {\n      this.endFade();\n    });\n  }\n\n  // Submits payment details securely to KOMOJU before redirecting.\n  // The redirect target may be\n  // 1. A URL for performing 3DS authentication\n  // 2. An external payment provider URL (i.e. to log into a payment app or show a QR code)\n  // 3. The session's return_url in the case where payment is completed instantly\n  async submit(): Promise<KomojuSubmitResult> {\n    if (!this.module || !this.session) {\n      return { type: 'submit-result', errors: ['Attempted to submit before selecting KOMOJU Payment method'] };\n    }\n    const paymentMethod = this.paymentMethod;\n    if (!paymentMethod) throw new Error(`KOMOJU Payment method not found: ${this.paymentType}`);\n\n    // Check for invalid input\n    this.querySelectorAll('komoju-error').forEach(error => error.remove());\n    const validatedFields = this.querySelectorAll('.has-validation');\n    const errors = Array.prototype.map.call(validatedFields, (field) =>\n      field instanceof HTMLInputElement ? runValidation(field) : null\n    );\n    if (errors.some(error => error != null)) {\n      return { type: 'submit-result', errors: errors.filter(error => error != null) };\n    }\n\n    // Now we can pull the payment details hash from the payment method module\n    // and send it to KOMOJU.\n    this.startFade();\n    const paymentDetails = this.module.paymentDetails(this, paymentMethod);\n\n    if (this.token) {\n      return await this.submitToken(paymentDetails);\n    }\n    else {\n      return await this.submitPayment(paymentDetails);\n    }\n  }\n\n  // Called by submit,\n  // submits payment directly to KOMOJU for processing.\n  async submitPayment(paymentDetails: object): Promise<KomojuSubmitResult> {\n    const paymentMethod = this.paymentMethod;\n    if (!paymentMethod) {\n      throw new Error('Attempted to submit before selecting KOMOJU Payment method');\n    }\n    const session = this.session!;\n\n    // If the payment method is not supported by KOMOJU Fields, we can still redirect straight\n    // to the session URL, effectively supporting *all* payment methods.\n    let moduleName = paymentMethod.offsite ? 'offsite' : paymentMethod.type;\n    if (!supportedPaymentTypes.has(moduleName)) {\n      const result: KomojuSubmitResult = {\n        type: 'submit-result',\n        pay: {\n          status: 'pending',\n          redirect_url: `${session.session_url}#${paymentMethod.type}`,\n        },\n      };\n      return result;\n    }\n\n    // Special case for 3DS\n    let secureTokenId: string | null = null;\n    if (paymentMethod.type === 'credit_card' && session.mode !== 'customer') try {\n      const { secureToken, error, skip } = await this.do3DS(paymentDetails);\n\n      if (secureToken) {\n        secureTokenId = secureToken.id\n      } else if (error && !skip) {\n        return {\n          type: 'submit-result',\n          errors: [error]\n        }\n      }\n    } catch(e) {\n      console.error('Error during secure token flow. Continuing without.', e);\n    }\n\n    const payResponse = await this.komojuFetch('POST', `/api/v1/sessions/${session.id}/pay`, {\n      payment_details: secureTokenId ?? paymentDetails,\n      api_locale: this.locale\n    });\n    const payResult = await payResponse.json() as KomojuPayResult;\n\n    const result: KomojuSubmitResult = {\n      type: 'submit-result',\n      pay: payResult,\n    };\n\n    if (payResult.error) {\n      console.error(payResult);\n      this.handleApiError(payResult.error);\n      this.endFade();\n    }\n\n    return result;\n  }\n\n  // Special case for credit card. Called by both submitToken and submitPayment.\n  // The dialog element that handles this exists in the <komoju-fields> element,\n  // so we use broker to send a message to the parent window.\n  async do3DS(paymentDetails: object): Promise<KomojuSecureTokenOrError> {\n    const { secureToken, error } = await this.submitSecureToken(paymentDetails);\n\n    // If the card brand is unsupported, we have no choice but to skip 3DS.\n    if (error && error.code === 'unsupported_card_brand') {\n      return {\n        error,\n        skip: true,\n      }\n    }\n\n    if (error) return { error };\n    else if (!secureToken) throw new Error('Secure token empty response');\n\n    const status = secureToken.verification_status;\n\n    // Secure tokens with these statuses are usable as-is.\n    if (status === 'OK' || status === 'SKIPPED') {\n      return { secureToken };\n    }\n\n    // Secure token starting in an ERRORED state means misconfiguration in KOMOJU.\n    // If possible, we don't want that to get in the way of payment.\n    if (status === 'ERRORED') {\n      return {\n        skip: true,\n      }\n    }\n\n    // This passes off control to the <komoju-fields> element.\n    // Also should note that this will await until the user finishes interacting with the\n    // dialog, so we might be waiting for a long time here.\n    const dialogResult = await this.broker.send<KomojuDialogStart>({\n      type: 'dialog-start',\n      url: secureToken.authentication_url,\n    });\n\n    if (dialogResult?.type !== 'dialog-result') {\n      throw new Error('Expected dialog-result, got ' + JSON.stringify(dialogResult));\n    } else {\n      const { result } = dialogResult as KomojuDialogResult;\n\n      // If the card brand is unsupported, we have no choice but to skip 3DS.\n      if (result.error && result.error.code === 'unsupported_card_brand') {\n        return {\n          error: result.error,\n          skip: true,\n        };\n      }\n\n      if (result.error) {\n        this.handleApiError(result.error);\n        this.endFade();\n        return result;\n      }\n\n      // Verification status can be \"ERRORED\" when the user intentionally clicks \"cancel\".\n      // In any case, we need a full stop here and so we should *not* return the secure token,\n      // as doing so will signal to the caller that we want to continue with processing.\n      if (result.secureToken && result.secureToken.verification_status === 'ERRORED') {\n        const error = i18nMessage(this.locale, 'verification-failed') ?? '3DS error';\n        this.handleApiError(error);\n        this.endFade();\n        return {\n          error: {\n            code: 'verification_status_errored',\n            message: error,\n            param: null,\n            details: null,\n          }\n        };\n      }\n\n      return result;\n    }\n  }\n\n  async submitSecureToken(paymentDetails: object): Promise<KomojuSecureTokenOrError> {\n    const session = this.session!;\n    const returnURL = new URL(this.komojuCdn);\n    returnURL.pathname = '/secure-token-return.html';\n    returnURL.searchParams.set('session_id', session.id);\n\n    const secureTokenResponse = await this.komojuFetch('POST', `/api/v1/secure_tokens`, {\n      amount: session.amount,\n      currency: session.currency,\n      payment_details: paymentDetails,\n      return_url: returnURL,\n    });\n    if (secureTokenResponse.status >= 400) {\n      const error = (await secureTokenResponse.json()).error as KomojuApiError;\n      return { error };\n    }\n    const secureToken = await secureTokenResponse.json() as KomojuSecureToken;\n\n    return { secureToken };\n  }\n\n  async handleApiError(error: string | KomojuApiError) {\n    if (!this.broker) throw new Error('KOMOJU Fields bug: broker should be set by now');\n\n    // Emit an event so implementers can handle this.\n    const result = await this.broker.send<KomojuDispatchEvent>({\n      type: 'dispatch-event',\n      name: 'komoju-error',\n      detail: { error },\n    });\n    if (!result || result.type !== 'dispatch-result') {\n      throw new Error('Expected dispatch-result, got ' + JSON.stringify(result));\n    }\n\n    // Show errors if implementers don't cancel the event.\n    if ((result as KomojuDispatchResult).cancel) return;\n\n    this.querySelectorAll('.generic-error-message').forEach(container => {\n      const errorText = document.createElement('komoju-error');\n      if (typeof error === 'string') {\n        errorText.textContent = error;\n      } else if (error.message) {\n        errorText.textContent = error.message;\n      }\n      container.append(errorText);\n    });\n  }\n\n  // Called by submit,\n  // uses payment info to create a token that can be safely transmitted to the backend and used there.\n  async submitToken(paymentDetails: any): Promise<KomojuSubmitResult> {\n    // Credit cards should create a secure token instead.\n    if (paymentDetails.type === 'credit_card') {\n      const { secureToken, error, skip } = await this.do3DS(paymentDetails);\n      // If card brand doesn't support 3DS then we can continue without.\n\n      if (error && !skip) {\n        return { type: 'submit-result', errors: [error] };\n      } else if (secureToken) {\n        return {\n          type: 'submit-result',\n          token: secureToken,\n        };\n      }\n    }\n\n    const tokenResponse = await this.komojuFetch('POST', `/api/v1/tokens`, {\n      payment_details: paymentDetails\n    });\n    if (tokenResponse.status >= 400) {\n      const error = (await tokenResponse.json()).error as KomojuApiError;\n      this.handleApiError(error);\n      this.endFade();\n      return { type: 'submit-result', errors: [error.message] };\n    }\n    const token = await tokenResponse.json() as KomojuToken;\n    return {\n      type: 'submit-result',\n      token\n    };\n  }\n\n  // The below render() function often ends up being called multiple times before the previous\n  // one finishes. Then they're racing to replace the DOM, which can cause weird bugs.\n  // This little counter lets us ignore any renders that are not the most recent one.\n  _renderCount = 0;\n\n  // Renders fields for the selected payment method.\n  // Usually implementers would not need to call this manually.\n  async render() {\n    if (!this.session) throw new Error('KOMOJU Session not loaded');\n\n    const paymentMethod = this.session.payment_methods.find(method => method.type === this.paymentType);\n\n    // This helps us avoid race conditions if render() gets called twice in quick succession\n    // (common occurrence - session attr and payment-type attr often cause 2 renders)\n    const thisRender = ++this._renderCount;\n\n    if (!paymentMethod) {\n      // Render \"invalid payment method\" text\n      const errorElement = document.createElement('komoju-error');\n      const errorMessage = document.createElement('komoju-i18n') as KomojuI18nElement;\n      errorMessage.key = 'payment-method-unavailable';\n      errorElement.append(errorMessage);\n      this.replaceChildren(errorElement);\n      this.applyTheme();\n      return;\n    }\n\n    // Grab the module for the payment method (name of a folder in src/fields)\n    let moduleName = paymentMethod.type;\n    if (!supportedPaymentTypes.has(moduleName)) {\n      // The offsite module works as a catch-all for payment methods that don't have their own module.\n      moduleName = 'offsite';\n    }\n\n    const module = await import(`${this.komojuCdn}/fields/${moduleName}/module.js`);\n    if (thisRender !== this._renderCount) return; // This render is no longer the most recent one\n\n    this.module = module;\n    if (!this.module) throw new Error(`KOMOJU Payment module not found: ${this.paymentType}`);\n\n    // Render payment method fields\n    this.module.render(this, paymentMethod);\n\n    // Make IME status easily accessible to JS. Payment method modules can use this to avoid\n    // auto-formatting while IME composition is still in progress.\n    this.querySelectorAll('input').forEach((input) => {\n      input.addEventListener('compositionstart', () => {\n        input.dataset.ime = 'active';\n      });\n      input.addEventListener('compositionend', () => {\n        input.dataset.ime = 'inactive';\n      });\n    });\n\n    // Add theme styles\n    this.applyTheme();\n\n    // Add price info (customer fee, dynamic currency)\n    const priceInfo = this.querySelector('.price-info');\n    if (!priceInfo) return;\n\n    // Customer fee\n    if (paymentMethod.customer_fee) {\n      const listItem = document.createElement('li');\n      const feeMessage = document.createElement('komoju-i18n') as KomojuI18nElement;\n      listItem.classList.add('customer-fee');\n      feeMessage.key = 'customer-fee-will-be-charged';\n      feeMessage.dataset['fee'] = formatMoney(\n        paymentMethod.customer_fee,\n        paymentMethod.currency ?? this.session.currency\n      );\n      listItem.append(feeMessage);\n      priceInfo.append(listItem);\n    }\n\n    // Dynamic currency (DCC)\n    if (\n      paymentMethod.exchange_rate &&\n      paymentMethod.amount &&\n      paymentMethod.currency &&\n      paymentMethod.currency !== this.session.currency\n    ) {\n      const listItem = document.createElement('li');\n      const dccMessage = document.createElement('komoju-i18n') as KomojuI18nElement;\n      const rate = Math.round(paymentMethod.exchange_rate * 10000) / 10000;\n      dccMessage.key = 'dynamic-currency-notice';\n      dccMessage.dataset['currency'] = paymentMethod.currency;\n      dccMessage.dataset['original'] = formatMoney(this.session.amount, this.session.currency);\n      dccMessage.dataset['converted'] = formatMoney(paymentMethod.amount, paymentMethod.currency);\n      if (paymentMethod.customer_fee) {\n        dccMessage.key = 'dynamic-currency-notice-with-fee';\n        dccMessage.dataset['total'] = formatMoney(\n          paymentMethod.amount + paymentMethod.customer_fee,\n          paymentMethod.currency\n        );\n      }\n      listItem.title = `1 ${this.session.currency} = ${rate} ${paymentMethod.currency}`;\n      listItem.classList.add('dynamic-currency');\n      listItem.append(dccMessage);\n      priceInfo.append(listItem);\n    }\n  }\n\n  // fetch wrapper with KOMOJU authentication already handled.\n  komojuFetch = komojuFetch.bind(this, this)\n\n  // Fade out fields while loading\n  private startFade() {\n    const fade = document.createElement('komoju-fade');\n    setTimeout(() => fade.classList.add('show'), 0);\n    this.querySelector('.fields')?.prepend(fade);\n  }\n\n  // Remove the fade effect created by startFade()\n  private endFade() {\n    this.querySelectorAll('komoju-fade').forEach(el => {\n      const fade = el as HTMLElement;\n      fade.classList.remove('show');\n      // Fade animation time is 0.5s in static/shared.css right now.\n      setTimeout(() => fade.remove(), 500);\n    });\n  }\n}\n", "// This is a <komoju-error> error tag we use internally for displaying validation errors.\n// End users are not expected to use this.\nexport default class KomojuErrorElement extends HTMLElement {\n  container: HTMLElement;\n\n  constructor() {\n    super();\n    const root = this.attachShadow({ mode: 'open' });\n\n    // This container will stretch and shrink as the error message appears and disappears.\n    const container = document.createElement('div');\n    this.container = container;\n    container.style.height = '0';\n    container.style.transition = 'height 0.2s ease-in-out';\n\n    // This element's contents appears inside of the container.\n    const slot = document.createElement('slot');\n    container.append(slot);\n\n    root.append(container);\n  }\n\n  // Animate the height of the error message when it appears on the page. Resize height to adjust\n  // changes in width.\n  connectedCallback() {\n    this.container.style.height = this.container.scrollHeight + 'px';\n\n    // Make sure this height adjusts if the parent element's width changes.\n    const resizeObserver = new ResizeObserver((_) => {\n      // Adjust the height when the observed element's size changes\n      this.container.style.height = this.container.scrollHeight + 'px';\n    });\n\n    resizeObserver.observe(this.container);\n  }\n\n  // Animates the height of the error message when it is removed from the page.\n  override remove() {\n    this.classList.add('removing');\n    this.container.style.height = '0';\n    window.setTimeout(() => {\n      super.remove();\n    }, 200);\n  }\n}\n", "// This is <komoju-fade>. It's used internally to fade out the fields temporarily during submit.\n// This prevents double submits and also signals to the user that something is happening.\n//\n// <komoju-fade> must be placed at the top of the .fields element, otherwise sizing and placement\n// won't work well.\nexport default class KomojuFadeElement extends HTMLElement {\n  resizeObserver?: ResizeObserver;\n\n  connectedCallback() {\n    const fields = this.parentElement;\n    if (!fields) return;\n\n    this.resizeObserver = new ResizeObserver((entries) => {\n      const { width, height } = entries[0].contentRect;\n      this.style.width = `${width}px`;\n      this.style.height = `${height}px`;\n    });\n    this.resizeObserver?.observe(fields);\n  }\n\n  disconnectedCallback() {\n    this.resizeObserver?.disconnect();\n    this.resizeObserver = undefined;\n  }\n}\n", "import './types.d';\nimport KomojuHostElement from './komoju-host-element';\nimport KomojuErrorElement from './shared/komoju-error-element';\nimport KomojuI18nElement from './shared/komoju-i18n-element';\nimport KomojuFadeElement from './shared/komoju-fade-element';\nimport ENV from './generated/env';\n\n// \"Internal\" custom elements\nwindow.customElements.define('komoju-host', KomojuHostElement);\nwindow.customElements.define('komoju-error', KomojuErrorElement);\nwindow.customElements.define('komoju-i18n', KomojuI18nElement);\nwindow.customElements.define('komoju-fade', KomojuFadeElement);\n\n// Error reporting\n(async () => {\n  // HACK: weird interpolation intentional because of typescript not knowing the type of the import.\n  // I want the browser to actually make an async import request instead of having esbuild pull the\n  // whole error-reporting module into the fields-iframe bundle.\n  const moduleName = 'error-reporting';\n  const module = await import(`${ENV.CDN}/extras/${moduleName}/module.js`);\n\n  const onerror = (event: ErrorEvent | PromiseRejectionEvent) => {\n    const error = (event instanceof ErrorEvent) ? event.error : (event.reason as Error);\n    if (!(error instanceof Error)) return;\n\n    module.reportError(error);\n  }\n\n  window.addEventListener('error', onerror);\n  window.addEventListener('unhandledrejection', onerror);\n})();\n"],
  "mappings": "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",
  "names": ["currency", "amountCents", "result", "error"]
}
