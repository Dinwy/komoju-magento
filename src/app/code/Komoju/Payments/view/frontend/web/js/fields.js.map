{
  "version": 3,
  "sources": ["../src/generated/env.ts", "../src/shared/translations.ts", "../src/i18n.ts", "../src/shared/message-broker.ts", "../src/shared/komoju-api.ts", "../src/komoju-fields-element.ts", "../src/shared/radio-helpers.ts", "../src/generated/supported-payment-types.ts", "../src/shared/komoju-i18n-element.ts", "../src/shared/themable.ts", "../src/komoju-picker-element.ts", "../src/index.ts"],
  "sourcesContent": ["// Generated by bin/generate.sh\n//\n// This file pulls from environment variables (and git).\n\nexport default {\n  \"CDN\": \"https://multipay.komoju.com\",\n  \"ENV\": \"development\",\n  \"HONEYBADGER_API_KEY\": \"\",\n  \"GIT_REV\": \"99ad2eb29ce6530dedfe3a0ec34aea970dbaa78a\",\n};\n", "declare let window: WindowWithKomojuGlobals;\n\n// Call this to add messages to the registry.\n// Individual payment method modules can do this to add their own messages.\n// That way, we avoid needing to load all messages for every payment method upfront.\nexport function registerMessages(messages: I18n) {\n  if (!window.komojuTranslations) {\n    window.komojuTranslations = { 'en': {}, 'ja': {} };\n  }\n\n  for (const lang of Object.keys(window.komojuTranslations)) {\n    window.komojuTranslations[lang] = {\n      ...window.komojuTranslations[lang],\n      ...messages[lang],\n    };\n  }\n}\n", "export const en = {\n  'customer-fee-will-be-charged': 'A fee of %{fee} will be included.',\n  'dynamic-currency-notice': 'Payment will be made in %{currency}: %{original} \u2192 %{converted}.',\n  'dynamic-currency-notice-with-fee': 'Payment will be made in %{currency}: %{original} \u2192 %{converted}. (total: %{total})',\n  'payment-method-unavailable': 'This payment method is currently unavailable.',\n  'verification-failed': 'Verification failed.',\n  'close': 'Close',\n};\n\nexport const ja: typeof en = {\n  'customer-fee-will-be-charged': '%{fee}\u306E\u624B\u6570\u6599\u304C\u8FFD\u52A0\u3055\u308C\u307E\u3059\u3002',\n  'dynamic-currency-notice': '\u652F\u6255\u3044\u306F%{currency}\u3067\u6C7A\u6E08\u3055\u308C\u307E\u3059: %{original} \u2192 %{converted}\u3002',\n  'dynamic-currency-notice-with-fee': '\u652F\u6255\u3044\u306F%{currency}\u3067\u6C7A\u6E08\u3055\u308C\u307E\u3059: %{original} \u2192 %{converted}\u3002(\u5408\u8A08%{total})',\n  'payment-method-unavailable': '\u3053\u306E\u652F\u6255\u3044\u65B9\u6CD5\u306F\u73FE\u5728\u3054\u5229\u7528\u3044\u305F\u3060\u3051\u307E\u305B\u3093\u3002',\n  'verification-failed': '\u8A8D\u8A3C\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002',\n  'close': '\u9589\u3058\u308B',\n};\n", "export interface Message {\n  type: string,\n}\nexport interface FullMessage extends Message {\n  brokerId: string,\n  id: string,\n}\n\ninterface MessageAck extends FullMessage {\n  type: 'ack',\n  response?: Message,\n}\n\ntype MessageBrokerArgs = { send: Window, receive: Window };\n\ntype TypedMessageListener<T extends Message> = (arg: T) => Promise<Message | undefined | void> | Message | undefined | void;\ntype MessageListener = TypedMessageListener<Message>;\n\n// Wrapper around postMessage events that lets us use promises instead of\n// disjoint \"send\" and \"receive\" flows.\nexport class MessageBroker {\n  // Keep track of which window to send to and which to receive on.\n  // These are promises so that we can effectively buffer messages until the window is ready.\n  _sendWindow: Promise<Window>;\n  _receiveWindow: Promise<Window>;\n  _setSendWindow?: (value: Window) => void;\n  _setReceiveWindow?: (value: Window) => void;\n\n  // Raw \"message\" event listener. We need to keep track of this so we can remove it later.\n  messageHandler: (event: MessageEvent) => void;\n\n  // Map of in-progress promises. When we receive an ack message with a matching id, we resolve the promise.\n  promises: Map<string, {\n    promise: Promise<Message | undefined>,\n    resolve: (value?: Message) => void,\n  }>;\n\n  // Map of listeners. When we receive a message with a matching type, we call the listener.\n  listeners: Map<string, MessageListener>;\n\n  // Unique id for this broker. Used to distinguish messages from other brokers.\n  id: string;\n\n  origin: string;\n\n  constructor(id?: string) {\n    this._sendWindow = new Promise(resolve => this._setSendWindow = resolve);\n    this._receiveWindow = new Promise(resolve => this._setReceiveWindow = resolve);\n\n    this.messageHandler = event => {\n      if (this.origin !== '*' && event.origin !== this.origin) return;\n      this.handleMessage(event);\n    };\n\n    this.id = id ?? crypto.randomUUID();\n    this.origin = '*';\n    this.promises = new Map();\n    this.listeners = new Map();\n  }\n\n  // Call this to set up the broker\n  setup(arg: MessageBrokerArgs) {\n    if (this._setSendWindow) {\n      this._setSendWindow(arg.send);\n      this._setSendWindow = undefined;\n    } else {\n      this._sendWindow = Promise.resolve(arg.send);\n    }\n\n    if (this._setReceiveWindow) {\n      this._setReceiveWindow(arg.receive);\n      this._setReceiveWindow = undefined;\n    } else {\n      this._receiveWindow = Promise.resolve(arg.receive);\n    }\n\n    arg.receive.addEventListener('message', this.messageHandler);\n  }\n\n  // Call this to send a message. Promise will resolve when the associated ack message\n  // comes back.\n  send<MessageType extends Message>(message: MessageType): Promise<Message | undefined> {\n    const fullMessage: FullMessage = {\n      ...message,\n      brokerId: this.id,\n      id: crypto.randomUUID(),\n    };\n\n    let resolve: ((value?: Message) => void) | null = null;\n    const promise = new Promise<Message | undefined>((resolvePromise, _reject) => {\n      resolve = resolvePromise;\n    });\n    if (!resolve) throw new Error('Broker is busted');\n\n    this.promises.set(fullMessage.id, { promise, resolve });\n    return this._sendWindow.then(w => w.postMessage(fullMessage, this.origin)).then(() => promise);\n  }\n\n  // Call this to set the listener for a certain event. Kind of like the built-in\n  // addEventListener, but can only add one per event type.\n  receive<MessageType extends Message>(type: MessageType['type'], listener: TypedMessageListener<MessageType>) {\n    this.listeners.set(type, listener as MessageListener);\n  }\n\n  // Internal message handler\n  async handleMessage(event: MessageEvent<FullMessage>) {\n    const message = event.data;\n\n    // Ignore messages from other brokers\n    if (message.brokerId !== this.id) return;\n\n    // 'ack' messages resolve an in-progress promise\n    if (message.type === 'ack') {\n      const ack = message as MessageAck;\n      const promise = this.promises.get(ack.id);\n\n      // Acks with a wrong ID typically come from another <komoju-fields> tag\n      // in the same window.\n      if (!promise) return;\n\n      promise.resolve(ack.response);\n      this.promises.delete(ack.id);\n    }\n    // all other messages trigger a local listener if present\n    else {\n      const listener = this.listeners.get(message.type);\n      const ack: MessageAck = { type: 'ack', brokerId: this.id, id: message.id };\n      if (listener) ack.response = (await listener(message)) ?? undefined;\n      await this._sendWindow.then(w => w.postMessage(ack, this.origin));\n    }\n  }\n\n  // Call this to clean up the window event listener\n  destroy() {\n    return this._receiveWindow.then(w => w.removeEventListener('message', this.messageHandler));\n  }\n}\n", "// fetch wrapper with KOMOJU authentication already handled.\nexport function komojuFetch(\n  config: {\n    komojuApi: string,\n    publishableKey: string | null,\n  },\n  method: 'GET' | 'POST',\n  path: string,\n  body?: object\n): Promise<Response> {\n  if (!config.komojuApi) throw new Error('KOMOJU API URL is null');\n  if (!config.publishableKey) throw new Error('KOMOJU publishable-key not set');\n\n  return fetch(`${config.komojuApi}${path}`, {\n    method,\n    headers: {\n      accept: 'application/json',\n      'content-type': 'application/json',\n      authorization: `Basic ${btoa(`${config.publishableKey}:`)}`,\n      'komoju-via': 'fields',\n    },\n    body: body ? JSON.stringify(body) : undefined\n  });\n}\n", "import ENV from './generated/env';\n\nimport { registerMessages } from './shared/translations';\nimport * as i18n from './i18n';\nimport { MessageBroker } from './shared/message-broker';\nimport { komojuFetch } from './shared/komoju-api';\nregisterMessages(i18n);\n\n// Language gets stored in here, mostly controlled by <komoju-fields>.\ndeclare let window: WindowWithKomojuGlobals;\n\n// This is the main entrypoint for implementers.\n// The <komoju-fields> element manages an iframe that securely hosts the KOMOJU fields UI.\n// All <komoju-fields> attributes are sent into the iframe and synced with the <komoju-host> element.\nexport default class KomojuFieldsElement extends HTMLElement {\n  static get observedAttributes() {\n    console.log('KomojuFieldsElement, observedAttributes');\n\n    return [\n      'komoju-api',\n      'session',\n      'session-id',\n      'publishable-key',\n      'payment-type',\n      'locale',\n      'theme',\n      'token',\n      'name',\n    ];\n  }\n\n  // This message broker lets us communicate with the iframe using promises instead of\n  // raw postMessage and addEventListener.\n  broker: MessageBroker;\n\n  // When a <komoju-fields> element appears inside of a <form> tag, we attach a submit handler to it\n  // so we can seamlessly behave like an <input> tag.\n  // This formSubmitHandler lets us clean up the event listener when disconnected.\n  formSubmitHandler?: {\n    form: HTMLFormElement,\n    target: HTMLElement, // target is different from form so we can ensure our event gets called first\n    handler: (event: Event) => void\n  };\n  _submitting: boolean = false;\n\n  session: KomojuSession | null = null;\n\n  dialog: HTMLDialogElement;\n\n  get theme() {\n    return this.getAttribute('theme');\n  }\n  set theme(value) {\n    this.setAttribute('theme', value ?? '');\n  }\n\n  get komojuApi() {\n    return this.getAttribute('komoju-api') ?? 'https://komoju.com';\n  }\n  set komojuApi(value) {\n    this.setAttribute('komoju-api', value);\n  }\n\n  // To keep manual submit() calls idempotent, we hold onto the token from our last\n  // (and presumably only) successful submit.\n  token?: string;\n\n  constructor() {\n    super();\n    this.broker = new MessageBroker();\n    this.dialog = document.createElement('dialog');\n    this.listenToMessagesFromIframe(this.broker);\n\n    this.dialog.style.width = '80%';\n    this.dialog.style.height = '80%';\n    this.dialog.style.padding = '0';\n  }\n\n  // When connected, we want to find the form that this element is in and attach a submit handler to it.\n  connectedCallback() {\n    const iframeParams = new URLSearchParams();\n    iframeParams.append('broker', this.broker.id);\n    if (this.hasAttribute('komoju-api')) {\n      iframeParams.append('api', this.getAttribute('komoju-api')!);\n    }\n\n    // Set up our fields host iframe.\n    const iframe = document.createElement('iframe') as HTMLIFrameElement;\n    iframe.setAttribute('sandbox', 'allow-scripts allow-same-origin');\n    iframe.setAttribute('allow', 'payment *');\n    iframe.title = 'KOMOJU secure payment fields';\n    iframe.src = `${ENV.CDN}/fields-iframe.html#${iframeParams.toString()}`;\n    iframe.style.border = 'none';\n    iframe.style.width = '100%';\n    iframe.style.overflow = 'hidden';\n    iframe.height = '50';\n    iframe.addEventListener('load', () => {\n      if (!iframe.contentWindow) throw new Error('KOMOJU Fields: iframe had no contentWindow');\n      // Set up our message broker now that the iframe is loaded.\n      this.broker.setup({\n        send: iframe.contentWindow,\n        receive: window,\n      });\n    });\n    this.replaceChildren(iframe, this.dialog);\n\n    // Crudely search for parent element until it is a form tag.\n    let parent = this.parentElement;\n    while (parent && parent.tagName !== 'FORM') {\n      parent = parent.parentElement;\n    }\n    // It's OK if we can't find a parent form tag.\n    // Implementers can call submit() manually on this element.\n    if (!parent) return;\n    const form = parent as HTMLFormElement;\n\n    // We set the event target to the form's parent to ensure that our handler is called first.\n    // This works because of capturing. Capturing events are called on parents *before* target.\n    const target = form.parentElement;\n    if (!target) return;\n\n    const handler = (event: Event) => {\n      if (this._submitting) return;\n      // Make sure this komoju-fields element is visible.\n      if (this.offsetParent === null) return;\n      // Make sure this event is for the right form element.\n      if (event.target !== form) return;\n\n      event.preventDefault();\n      event.stopImmediatePropagation();\n\n      this.submit(event);\n    };\n    target.addEventListener('submit', handler, true);\n    this.formSubmitHandler = { form, target, handler };\n  }\n\n  // When disconnected, we want to remove the submit handler from the form (if added).\n  disconnectedCallback() {\n    if (this.formSubmitHandler) {\n      this.formSubmitHandler.target.removeEventListener('submit', this.formSubmitHandler.handler, true);\n      this.formSubmitHandler = undefined;\n    }\n\n    this.broker.destroy();\n  }\n\n  // Receive messages from the iframe.\n  listenToMessagesFromIframe(broker: MessageBroker) {\n    // The iframe will sometimes ask us to dispatch an event.\n    broker.receive<KomojuDispatchEvent>('dispatch-event', (message) => {\n      const event = new CustomEvent(message.name, {\n        detail: message.detail,\n        bubbles: true,\n        composed: true,\n        cancelable: true,\n      });\n\n      // Sync own session with iframe session.\n      // This way implementers can always access the latest session from the komoju-fields element\n      // in case they want to know what payment methods are supported, etc.\n      if (message.name === 'komoju-session-change') {\n        this.session = message.detail.session as KomojuSession;\n      }\n\n      const result: KomojuDispatchResult = {\n        type: 'dispatch-result',\n        cancel: !this.dispatchEvent(event)\n      }\n\n      return result;\n    });\n\n    // The iframe tells us how much height its content has so that we can resize it seamlessly.\n    broker.receive<KomojuMessageResize>('resize', (message) => {\n      const iframe = this.querySelector('iframe') as HTMLIFrameElement;\n      iframe.height = message.height;\n    });\n\n    broker.receive<KomojuDialogStart>('dialog-start', async (message) => {\n      const result: KomojuDialogResult = {\n        type: 'dialog-result',\n        result: await this.show3DSDialog(message.url),\n      };\n      return result;\n    });\n  }\n\n  // Reactive attribute handling. Send all attrs to the iframe so that they are synced with the komoju-host element.\n  async attributeChangedCallback(name: string, _oldValue: string | null, newValue: string | null) {\n    console.log('KomojuFieldsElement, oldValue?', name, _oldValue);\n    console.log('###')\n    console.log('KomojuFieldsElement, attributeChangedCallback', name, newValue);\n\n    this.broker.send<KomojuMessageAttr>({\n      type: 'attr',\n      attr: name,\n      value: newValue,\n    });\n  }\n\n  // Consumers may call this to submit the form.\n  // If the 'token' attribute is set, this will return the token response from KOMOJU.\n  async submit(event?: Event): Promise<KomojuToken | KomojuSecureToken | void> {\n    if (this.token) return JSON.parse(this.token);\n\n    // Ask the iframe to submit.\n    const submitResult = await this.broker.send({ type: 'submit' });\n    if (submitResult?.type !== 'submit-result') {\n      throw new Error(`Unexpected submit response from komoju-fields iframe ${JSON.stringify(submitResult)}`);\n    }\n    const result = submitResult as KomojuSubmitResult;\n\n    // On error, emit a komoju-invalid event in case consumers want to handle it.\n    if (result.errors) {\n      this.dispatchEvent(new CustomEvent('komoju-invalid', {\n        detail: { errors: result.errors }, bubbles: true, composed: true,\n      }));\n      return;\n    }\n\n    // On payment success, redirect.\n    if (result.pay) {\n      if (!result.pay.error) await this.handlePayResult(result.pay);\n      return;\n    }\n\n    // If this is part of a form submit, we want to add the token to the form and resubmit.\n    if (result.token && event && this.formSubmitHandler) {\n      const form = this.formSubmitHandler.form;\n\n      // Now we add an input to the form with the token and submit it.\n      const inputName = this.getAttribute('name') ?? 'komoju_token';\n      let input = document.querySelector(`input[name=\"${inputName}\"]`) as HTMLInputElement | null;\n      if (!input) {\n        input = document.createElement('input');\n        input.type = 'hidden';\n        input.name = inputName;\n        form.append(input);\n      }\n      input.value = result.token.id;\n\n      // Re-submit the form without our submit event getting in the way.\n      this.submitParentForm();\n      return;\n    }\n\n    // Token submission.\n    if (result.token) {\n      this.token = JSON.stringify(result.token);\n      return result.token;\n    }\n\n    throw new Error(\"KOMOJU Fields bug: submit result was not handled\");\n  }\n\n  // After submit in a standard integration, we will usually just redirect.\n  // But there's a special case where we show instructions, e.g. for konbini and bank transfer.\n  async handlePayResult(payResult: KomojuPayResult) {\n    const session = this.session;\n    if (!session) throw new Error(\"handlePayResult called without a session\");\n\n    const instructions = payResult.payment?.payment_details?.instructions_url;\n\n    if (instructions) {\n      const returnURL = new URL(session.return_url ?? session.session_url);\n      returnURL.searchParams.append('session_id', session.id);\n      this.showInstructionsDialog(instructions, returnURL.toString());\n    } else if (payResult.redirect_url) {\n      window.location.href = payResult.redirect_url;\n    } else {\n      throw new Error(`payResult should have a redirect_url but doesnt ${JSON.stringify(payResult)}`);\n    }\n  }\n\n  // Removes our form submit override and submits the parent form directly.\n  async submitParentForm() {\n    if (!this.formSubmitHandler) throw new Error('KOMOJU Fields: tried to submit nonexistent parent form');\n    const form = this.formSubmitHandler.form;\n\n    // Re-submit the form without our submit event getting in the way.\n    try {\n      // This _submitting flag should prevent infinite recursion.\n      this._submitting = true;\n      const submitEvent = new Event('submit', { bubbles: true, cancelable: true });\n      if (form.dispatchEvent(submitEvent)) {\n        form.submit();\n      } else {\n        this.broker.send({ type: 'end-fade' });\n      }\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  showInstructionsDialog(url: string, finishURL: string) {\n    const dialog = this.dialog;\n\n    const iframe = createIframe(url);\n    iframe.style.height = '90%';\n\n    const closeButton = document.createElement('a');\n    const closeText = document.createElement('komoju-i18n') as KomojuI18nElement;\n    closeText.key = 'close';\n    closeButton.append(closeText);\n    closeButton.classList.add('komoju-fields-close-dialog');\n    closeButton.href = finishURL;\n    closeButton.style.display = 'block';\n    closeButton.style.padding = '10px';\n\n    dialog.replaceChildren(\n      closeButton,\n      iframe,\n    );\n    dialog.showModal();\n  }\n\n  show3DSDialog(url: string): Promise<KomojuSecureTokenOrError> {\n    return new Promise((resolve, reject) => {\n      const dialog = this.dialog;\n      const origin = ENV['CDN'];\n\n      const iframe = createIframe(url);\n\n      window.addEventListener('message', async (event) => {\n        if (event.origin !== origin) return;\n\n        try {\n          if (!event.data?._komojuFields) return;\n\n          const { secureTokenId } = event.data;\n          if (!secureTokenId) throw new Error('No secureTokenId in message');\n\n          const credentials = {\n            komojuApi: this.komojuApi,\n            publishableKey: this.getAttribute('publishable-key') ?? '',\n          };\n          const secureTokenResponse = await komojuFetch(credentials, 'GET', `/api/v1/secure_tokens/${secureTokenId}`);\n          if (secureTokenResponse.status >= 400) {\n            const error = await secureTokenResponse.json() as KomojuApiError;\n            resolve({ error });\n            return;\n          }\n          const secureToken = await secureTokenResponse.json() as KomojuSecureToken;\n\n          dialog.close();\n          resolve({ secureToken });\n        } catch (e) {\n          reject(e);\n        }\n      });\n\n      dialog.replaceChildren(iframe);\n      dialog.showModal();\n    });\n  }\n}\n\n// Set up dynamic properties for each observed attribute, to support e.g.\n//   const fields = document.querySelector('komoju-fields');\n//   fields.sessionId = 'abc123';\nfor (const attr of KomojuFieldsElement.observedAttributes) {\n  // A few special cases here.\n  if (attr === 'session' || attr === 'theme' || attr === 'komoju-api') continue;\n\n  Object.defineProperty(KomojuFieldsElement.prototype, camelCase(attr), {\n    get() {\n      return this.getAttribute(attr);\n    },\n    set(value) {\n      if (value === null) this.removeAttribute(attr);\n      else this.setAttribute(attr, value);\n    },\n  });\n}\n\nfunction camelCase(str: string) {\n  return str\n    .split('-')\n    .reduce((a, b) => a + b.charAt(0).toUpperCase() + b.slice(1));\n}\n\nfunction createIframe(url: string): HTMLIFrameElement {\n  const iframe = document.createElement('iframe');\n  iframe.setAttribute(\n    'sandbox',\n    'allow-scripts allow-forms allow-same-origin'\n  );\n  iframe.src = url;\n  iframe.style.border = 'none';\n  iframe.style.width = '100%';\n  iframe.style.height = '100%';\n  return iframe;\n}", "interface QuerySelectorAll {\n  querySelectorAll: HTMLElement['querySelectorAll']\n}\n\n// Add .checked to the parent .radio element when the input is checked.\n// This is just to make the CSS a little easier, since we're putting the\n// input inside of the label.\nexport function setupRadioParentCheckedClass(input: HTMLInputElement, root: QuerySelectorAll) {\n  // Some sanity checks\n  if (!input.parentElement) {\n    throw new Error('KOMOJU Fields bug: radio input has no parent');\n  }\n  if (!input.parentElement.classList.contains('radio')) {\n    throw new Error('KOMOJU Fields bug: radio input parent has no .radio class');\n  }\n\n  // Initialize the checked class\n  if (input.checked) {\n    input.parentElement.classList.add('checked');\n  }\n\n  // Set checked class then checked\n  input.addEventListener('change', () => {\n    root.querySelectorAll('.radio.checked').forEach((el) => el.classList.remove('checked'));\n    input.parentElement!.classList.add('checked');\n  });\n}\n", "// Generated by bin/generate.sh\n//\n// List of supported payment types comes from the folders in src/fields/*.\n// To add a new one, simply add a new folder.\n\nconst supported: Set<string> = new Set();\nsupported.add('bank_transfer');\nsupported.add('credit_card');\nsupported.add('konbini');\nsupported.add('offsite');\nexport default supported;\n", "// Language gets stored in here, mostly controlled by <komoju-fields>.\ndeclare let window: WindowWithKomojuGlobals;\n\nconst defaultLanguage = 'en';\n\ntype Queryable = {\n  querySelectorAll: Document['querySelectorAll'];\n};\n\nexport function broadcastLocaleChange(root: Queryable, locale: string) {\n  root.querySelectorAll('komoju-i18n').forEach((element) => {\n    const i18n = element as KomojuI18nElement;\n    i18n.render(locale);\n  });\n}\n\n// This is a <komoju-i18n> element that we use internally for displaying translated text\nexport default class KomojuI18nElement extends HTMLElement {\n  static get observedAttributes() {\n    return ['key'];\n  }\n\n  // Attribute: key\n  // The key of the translation to display.\n  get key() {\n    return this.getAttribute('key');\n  }\n  set key(value) {\n    this.setAttribute('key', value ?? '');\n  }\n\n  connectedCallback() {\n    this.render();\n  }\n\n  attributeChangedCallback(name: string, _oldValue: string, _newValue: string) {\n    if (name === 'key') this.render();\n  }\n\n  // Search up the DOM until we find a parent element with a locale attribute.\n  findLocale() {\n    let parent = this.parentElement;\n    while (parent && !parent.getAttribute('locale')) {\n      parent = parent.parentElement;\n    }\n    return parent?.getAttribute('locale') ?? defaultLanguage;\n  }\n\n  render(locale?: string) {\n    if (!this.key) return;\n\n    if (!locale) locale = this.findLocale();\n    if (!Object.keys(window.komojuTranslations).includes(locale)) locale = defaultLanguage;\n\n    const lang = locale.substring(0, 2);\n\n    const message = window.komojuTranslations[lang][this.key];\n    if (!message) {\n      console.error(`KOMOJU bug: missing translation for key: ${this.key}`);\n      return;\n    }\n\n    // Perform interpolation\n    const matches = message.match(/%\\{[\\w-]+\\}/g);\n    if (matches) {\n      let result = message;\n      matches.forEach((match) => {\n        const key = match.replace(/%{|}/g, '');\n        const value = this.dataset[key];\n        if (value) result = result.replace(match, value);\n      });\n      this.textContent = result;\n      return;\n    }\n\n    this.textContent = message;\n  }\n}\n", "export default class Themable extends HTMLElement {\n  // Attribute: theme\n  // CSS file to use as a theme.\n  get theme() {\n    return this.getAttribute('theme');\n  }\n  set theme(value) {\n    this.setAttribute('theme', value ?? '');\n  }\n\n  applyTheme() {\n    const root = this.shadowRoot ?? document;\n\n    if (this.theme === null) {\n      root.querySelectorAll('#theme,#inline-theme').forEach(el => el.remove());\n    } else if (this.theme.startsWith('http') || this.theme.startsWith('/') || this.theme.startsWith('data:')) {\n      this.applyExternalTheme(root, this.theme);\n    } else {\n      this.applyInlineTheme(root, this.theme);\n    }\n  }\n\n  applyInlineTheme(root: ParentNode, theme: string) {\n    root.querySelectorAll('#theme,#inline-theme').forEach(el => el.remove());\n\n    const style = document.createElement('style');\n    style.id = 'inline-theme';\n    style.textContent = theme;\n    this.appendStyleTag(style);\n  }\n\n  applyExternalTheme(root: ParentNode, theme: string) {\n    root.querySelectorAll('#inline-theme').forEach(el => el.remove());\n    let link = root.querySelector('#theme') as HTMLLinkElement | null;\n    if (link) {\n      if (link.href !== this.theme) link.href = theme;\n    } else {\n      link = document.createElement('link');\n      link.id = 'theme';\n      link.rel = 'stylesheet';\n      link.href = theme;\n      this.appendStyleTag(link);\n    }\n  }\n\n  appendStyleTag(style: HTMLLinkElement | HTMLStyleElement) {\n    if (this.shadowRoot) {\n      this.shadowRoot.append(style);\n    }\n    else {\n      document.head.append(style);\n    }\n  }\n}\n", "import ENV from './generated/env';\n\nimport template from './picker.html';\nimport { setupRadioParentCheckedClass } from './shared/radio-helpers';\nimport { registerMessages } from './shared/translations';\nimport { komojuFetch } from './shared/komoju-api';\nimport supportedPaymentTypes from './generated/supported-payment-types';\nimport { broadcastLocaleChange } from './shared/komoju-i18n-element';\nimport Themable from './shared/themable';\n\ntype ChangedHandler = {\n  element: KomojuFieldsConfig,\n  handler: (event: Event) => void,\n};\n\nexport default class KomojuPickerElement extends Themable {\n  static get observedAttributes() {\n    return [ 'locale', 'theme' ];\n  }\n\n  // Attribute: fields\n  // DOM ID of <komoju-fields> element that this picker is associated with.\n  // When blank, will just update all <komoju-fields> elements.\n  get fields() {\n    return this.getAttribute('fields');\n  }\n  set fields(value) {\n    this.setAttribute('fields', value ?? '');\n  }\n\n  // Attribute: locale\n  // Locale to use for payment method names.\n  get locale() {\n    return this.getAttribute('locale');\n  }\n  set locale(value) {\n    this.setAttribute('locale', value ?? '');\n  }\n\n  komojuPaymentMethods?: Array<KomojuPaymentMethodMeta>\n\n  // This picker element piggy-backs on the <komoju-fields> element's session and locale.\n  sessionChangedHandler: ChangedHandler | null = null\n\n  constructor() {\n    super();\n    const root = this.attachShadow({ mode: 'open' });\n    root.innerHTML = template;\n\n    // Set base CSS\n    const link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.href = `https://multipay.komoju.com/static/shared.css`;\n    root.append(link);\n  }\n\n  async connectedCallback() {\n    const fields = this.komojuFieldsElement();\n    let handler = {\n      element: fields,\n      handler: (_evt: Event) => { this.render(fields); },\n    };\n\n    await this.setupPaymentTypesI18n();\n    this.render(fields);\n    fields.addEventListener('komoju-session-change', handler.handler);\n    this.sessionChangedHandler = handler;\n  }\n\n  disconnectedCallback() {\n    if (this.sessionChangedHandler) {\n      this.sessionChangedHandler.element.removeEventListener(\n        'komoju-session-change',\n        this.sessionChangedHandler.handler\n      );\n    }\n  }\n\n  async attributeChangedCallback(name: string, oldValue: string | null, newValue: string | null) {\n    if (!this.shadowRoot) return;\n\n    if (name === 'locale' && newValue && oldValue !== newValue) {\n      broadcastLocaleChange(this.shadowRoot, newValue);\n      this.updatePickerLocale(newValue);\n    }\n    else if (name === 'theme') {\n      this.applyTheme();\n    }\n  }\n\n  komojuFieldsElement() {\n    if (this.fields) {\n      return document.querySelector(`#${this.fields}`) as KomojuFieldsConfig;\n    }\n    else {\n      return document.querySelector('komoju-fields') as KomojuFieldsConfig;\n    }\n  }\n\n  render(fields: KomojuFieldsConfig) {\n    if (!fields.session) return;\n    if (!this.shadowRoot) return;\n\n    const picker = this.shadowRoot.getElementById('picker');\n    const template = this.shadowRoot.getElementById('radio-template') as HTMLTemplateElement;\n    if (!picker) throw new Error('KOMOJU Fields bug: <komoju-picker> wrong shadow DOM (no picker)');\n    if (!template) throw new Error('KOMOJU Fields bug: <komoju-picker> wrong shadow DOM (no template)');\n\n    // If locale hasn't been set on <komoju-picker> directly, use session default_locale.\n    if (!this.locale) {\n      this.locale = fields.session.default_locale.substring(0, 2);\n    };\n\n    this.updatePickerLocale(this.locale)\n\n    // Clear the picker.\n    picker.replaceChildren();\n\n    let i = 0;\n    for (const paymentMethod of fields.session.payment_methods) {\n      const moduleName = paymentMethod.offsite ? 'offsite' : paymentMethod.type;\n\n      // Token mode cannot handle payment methods that aren't explicitly supported, so we won't\n      // show them on the picker.\n      if (fields.hasAttribute('token') && !supportedPaymentTypes.has(moduleName)) {\n        continue;\n      }\n\n      const radio = template.content.cloneNode(true) as HTMLElement;\n      const input = radio.querySelector('input') as HTMLInputElement;\n      const icon = radio.querySelector('img') as HTMLImageElement;\n      const text = radio.querySelector('komoju-i18n') as KomojuI18nElement;\n\n      if (i === 0 || fields.paymentType === paymentMethod.type) {\n        input.checked = true;\n      }\n      input.addEventListener('change', () => {\n        fields.paymentType = paymentMethod.type;\n      });\n      setupRadioParentCheckedClass(input, this.shadowRoot);\n\n      icon.src = `${fields.komojuApi}/payment_methods/${paymentMethod.type}.svg`;\n      text.key = paymentMethod.type;\n\n      picker.append(radio);\n\n      i += 1;\n    }\n\n    // Set user-defined theme\n    if (!this.theme && fields.theme) {\n      this.theme = fields.theme;\n      this.applyTheme();\n    }\n  }\n\n  // To keep things dynamic, we pull payment method translations from KOMOJU.\n  private async setupPaymentTypesI18n() {\n    const fields = this.komojuFieldsElement();\n    const response = await komojuFetch(fields, 'GET', '/api/v1/payment_methods');\n    this.komojuPaymentMethods = await response.json();\n\n    // Convert the \"name_en\", \"name_ja\" etc into { \"en\": { \"<name>\": \"<string>\" } }.\n    for (const method of this.komojuPaymentMethods!) {\n      const i18n = {\n        en: { [method.type_slug]: method.name_en },\n        ja: { [method.type_slug]: method.name_ja },\n        ko: { [method.type_slug]: method.name_ko },\n      };\n      registerMessages(i18n);\n    }\n  }\n\n  // Update the locale of the <komoju-picker> shadow DOM parent element. This allows children to\n  // determine the locale.\n  private updatePickerLocale(locale: string) {\n    if (!this.shadowRoot) return;\n    const picker = this.shadowRoot.getElementById('picker');\n    if (picker) { picker.setAttribute('locale', locale) };\n  }\n}\n", "import './types.d';\nimport KomojuFieldsElement from './komoju-fields-element';\nimport KomojuPickerElement from './komoju-picker-element';\nimport KomojuI18nElement from './shared/komoju-i18n-element';\ndeclare let window: WindowWithKomojuGlobals;\n\n// Public custom elements\nwindow.customElements.define('komoju-fields', KomojuFieldsElement);\nwindow.customElements.define('komoju-picker', KomojuPickerElement);\nwindow.customElements.define('komoju-i18n', KomojuI18nElement);\n\n// Error reporting\nwindow.komojuReportError = (error, context) => {\n  console.error(error, context);\n}\nif (window.komojuErrorReporting !== false) {\n  // Import proper error reporting module (Honeybadger) if implementer hasn't disabled it\n  (async () => {\n    // HACK: unnecessary interpolation because of typescript not knowing the type of the import\n    // This is a dynamic import because it means implementers who don't want it can opt out of\n    // a very large chunk of JS.\n    const moduleName = 'error-reporting';\n    const module = await import(`https://multipay.komoju.com/extras/${moduleName}/module.js`);\n    window.komojuReportError = module.reportError;\n  })();\n\n  // Catch errors (only ones that involve KomojuFields)\n  const onerror = (event: ErrorEvent | PromiseRejectionEvent) => {\n    const komojuFieldsFiles = [\n      /\\/fields\\.js:\\d+:\\d+\\n/,\n      /\\/fields\\/[\\w-]+\\/module\\.js\\n:\\d+:\\d+/,\n      /\\/extras\\/[\\w-]+\\/module\\.js\\n:\\d+:\\d+/,\n    ];\n\n    const error = (event instanceof ErrorEvent) ? event.error : (event.reason as Error);\n\n    if (!(error instanceof Error)) return;\n    if (!error.stack) return;\n    if (!komojuFieldsFiles.find((regex) => regex.test(error.stack!))) return;\n\n    window.komojuReportError(error);\n  };\n\n  window.addEventListener('error', onerror);\n  window.addEventListener('unhandledrejection', onerror);\n}\n"],
  "mappings": "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",
  "names": []
}
