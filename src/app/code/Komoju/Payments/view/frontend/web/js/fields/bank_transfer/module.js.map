{
  "version": 3,
  "sources": ["../../../src/shared/validation.ts", "../../../src/shared/translations.ts", "../../../src/fields/bank_transfer/i18n.ts", "../../../src/shared/char-width-utils.ts", "../../../src/fields/bank_transfer/module.ts"],
  "sourcesContent": ["// Adds validation to an input element.\nexport function addValidation<Translations extends I18n>(\n  _i18n: Translations, // Used only by typescript to compile-time catch missing translations.\n  input: HTMLInputElement,\n  callback: (input: HTMLInputElement) => keyof Translations['en'] | null\n) {\n  // Add a class so that we know this input has validation.\n  input.classList.add('has-validation');\n\n  // Tiny detail: if the user has never inputted anything, we don't want to run validations at all\n  // at the risk of showing an error message when the user is just clicking around.\n  input.addEventListener('input', () => {\n    input.dataset.validationDirty = 'true';\n  });\n\n  // Validation function. This will be called on 'blur' and also on a custom 'validate' event.\n  const validate = (event: Event) => {\n    const input = event.target as HTMLInputElement;\n\n    const errorMessageKey = callback(input);\n\n    if (errorMessageKey) {\n      showError(_i18n, input, errorMessageKey);\n    }\n  };\n  input.addEventListener('blur', (event) => {\n    if (input.dataset.validationDirty !== 'true') return;\n    else return validate(event);\n  });\n  input.addEventListener('validate', validate);\n\n  // When the user focuses on the input, remove all error artifacts.\n  input.addEventListener('focus', (event) => {\n    const input = event.target as HTMLInputElement;\n    clearErrors(input);\n  });\n}\n\nexport function showError<Translations extends I18n>(\n  _i18n: Translations, // Used only by typescript to compile-time catch missing translations.\n  input: HTMLInputElement,\n  messageKey: keyof Translations['en']\n) {\n  input.classList.add('invalid');\n  const key = messageKey as string;\n\n  // We don't want to show the same error twice!\n  const container = input.parentElement;\n  const dupeSelector = `komoju-error:not(.removing) > komoju-i18n[key=\"${key}\"]`;\n  if (container?.querySelector(dupeSelector)) {\n    return;\n  }\n\n  container?.append(createErrorElement(messageKey as string));\n}\n\nexport function clearErrors(input: HTMLInputElement) {\n  input.classList.remove('invalid');\n  input.parentElement?.querySelectorAll('komoju-error:not(.removing)').forEach((element) => {\n    element.remove();\n  });\n}\n\n// Runs validations on an <input> element.\nexport function runValidation(input: HTMLInputElement) {\n  // Fire the 'validate' custom event.\n  input.dispatchEvent(new CustomEvent('validate'));\n\n  // If there's an error message, return it.\n  const errorMessage = input.parentElement?.querySelector('komoju-error:not(.removing)')?.textContent;\n  return errorMessage ?? null;\n}\n\n// Creates the error message element that appears under an invalid input.\n// Mainly just called by addValidation().\nexport function createErrorElement(messageKey: string) {\n  const el = window.document.createElement('komoju-error');\n  const i18nEl = window.document.createElement('komoju-i18n') as KomojuI18nElement;\n  i18nEl.key = messageKey;\n  el.appendChild(i18nEl);\n  return el;\n}\n", "declare let window: WindowWithKomojuGlobals;\n\n// Call this to add messages to the registry.\n// Individual payment method modules can do this to add their own messages.\n// That way, we avoid needing to load all messages for every payment method upfront.\nexport function registerMessages(messages: I18n) {\n  if (!window.komojuTranslations) {\n    window.komojuTranslations = { 'en': {}, 'ja': {} };\n  }\n\n  for (const lang of Object.keys(window.komojuTranslations)) {\n    window.komojuTranslations[lang] = {\n      ...window.komojuTranslations[lang],\n      ...messages[lang],\n    };\n  }\n}\n", "export const en = {\n  'bt.label.lastname': 'Last name',\n  'bt.label.firstname': 'First name',\n  'bt.label.lastname-kana': 'Last name (kana)',\n  'bt.label.firstname-kana': 'First name (kana)',\n  'bt.label.email': 'Email address',\n  'bt.label.phone': 'Phone number',\n  'bt.error.required': 'Required',\n};\n\nexport const ja: typeof en = {\n  'bt.label.lastname': '\u59D3',\n  'bt.label.firstname': '\u540D',\n  'bt.label.lastname-kana': '\u59D3 (\u30AB\u30BF\u30AB\u30CA)',\n  'bt.label.firstname-kana': '\u540D (\u30AB\u30BF\u30AB\u30CA)',\n  'bt.label.email': '\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9',\n  'bt.label.phone': '\u96FB\u8A71\u756A\u53F7',\n  'bt.error.required': '\u5FC5\u9808\u9805\u76EE\u3067\u3059',\n};\n", "const conversionMap: any = {\n  \u30AC: '\uFF76\uFF9E',\n  \u30AE: '\uFF77\uFF9E',\n  \u30B0: '\uFF78\uFF9E',\n  \u30B2: '\uFF79\uFF9E',\n  \u30B4: '\uFF7A\uFF9E',\n  \u30B6: '\uFF7B\uFF9E',\n  \u30B8: '\uFF7C\uFF9E',\n  \u30BA: '\uFF7D\uFF9E',\n  \u30BC: '\uFF7E\uFF9E',\n  \u30BE: '\uFF7F\uFF9E',\n  \u30C0: '\uFF80\uFF9E',\n  \u30C2: '\uFF81\uFF9E',\n  \u30C5: '\uFF82\uFF9E',\n  \u30C7: '\uFF83\uFF9E',\n  \u30C9: '\uFF84\uFF9E',\n  \u30D0: '\uFF8A\uFF9E',\n  \u30D3: '\uFF8B\uFF9E',\n  \u30D6: '\uFF8C\uFF9E',\n  \u30D9: '\uFF8D\uFF9E',\n  \u30DC: '\uFF8E\uFF9E',\n  \u30D1: '\uFF8A\uFF9F',\n  \u30D4: '\uFF8B\uFF9F',\n  \u30D7: '\uFF8C\uFF9F',\n  \u30DA: '\uFF8D\uFF9F',\n  \u30DD: '\uFF8E\uFF9F',\n  \u30F4: '\uFF73\uFF9E',\n  \u30F7: '\uFF9C\uFF9E',\n  \u30FA: '\uFF66\uFF9E',\n  \u30A2: '\uFF71',\n  \u30A4: '\uFF72',\n  \u30A6: '\uFF73',\n  \u30A8: '\uFF74',\n  \u30AA: '\uFF75',\n  \u30AB: '\uFF76',\n  \u30AD: '\uFF77',\n  \u30AF: '\uFF78',\n  \u30B1: '\uFF79',\n  \u30B3: '\uFF7A',\n  \u30B5: '\uFF7B',\n  \u30B7: '\uFF7C',\n  \u30B9: '\uFF7D',\n  \u30BB: '\uFF7E',\n  \u30BD: '\uFF7F',\n  \u30BF: '\uFF80',\n  \u30C1: '\uFF81',\n  \u30C4: '\uFF82',\n  \u30C6: '\uFF83',\n  \u30C8: '\uFF84',\n  \u30CA: '\uFF85',\n  \u30CB: '\uFF86',\n  \u30CC: '\uFF87',\n  \u30CD: '\uFF88',\n  \u30CE: '\uFF89',\n  \u30CF: '\uFF8A',\n  \u30D2: '\uFF8B',\n  \u30D5: '\uFF8C',\n  \u30D8: '\uFF8D',\n  \u30DB: '\uFF8E',\n  \u30DE: '\uFF8F',\n  \u30DF: '\uFF90',\n  \u30E0: '\uFF91',\n  \u30E1: '\uFF92',\n  \u30E2: '\uFF93',\n  \u30E4: '\uFF94',\n  \u30E6: '\uFF95',\n  \u30E8: '\uFF96',\n  \u30E9: '\uFF97',\n  \u30EA: '\uFF98',\n  \u30EB: '\uFF99',\n  \u30EC: '\uFF9A',\n  \u30ED: '\uFF9B',\n  \u30EF: '\uFF9C',\n  \u30F2: '\uFF66',\n  \u30F3: '\uFF9D',\n  \u30A1: '\uFF67',\n  \u30A3: '\uFF68',\n  \u30A5: '\uFF69',\n  \u30A7: '\uFF6A',\n  \u30A9: '\uFF6B',\n  \u30C3: '\uFF6F',\n  \u30E3: '\uFF6C',\n  \u30E5: '\uFF6D',\n  \u30E7: '\uFF6E',\n  '\u3002': '\uFF61',\n  '\u3001': '\uFF64',\n  \u30FC: '\uFF70',\n  '\u2212': '-',\n  '\uFF08': '(',\n  '\uFF09': ')',\n  '\u300C': '\uFF62',\n  '\u300D': '\uFF63',\n  '\u30FB': '\uFF65',\n  '\u3000': ' ',\n  \uFF21: 'A',\n  \uFF22: 'B',\n  \uFF23: 'C',\n  \uFF24: 'D',\n  \uFF25: 'E',\n  \uFF26: 'F',\n  \uFF27: 'G',\n  \uFF28: 'H',\n  \uFF29: 'I',\n  \uFF2A: 'J',\n  \uFF2B: 'K',\n  \uFF2C: 'L',\n  \uFF2D: 'M',\n  \uFF2E: 'N',\n  \uFF2F: 'O',\n  \uFF30: 'P',\n  \uFF31: 'Q',\n  \uFF32: 'R',\n  \uFF33: 'S',\n  \uFF34: 'T',\n  \uFF35: 'U',\n  \uFF36: 'V',\n  \uFF37: 'W',\n  \uFF38: 'X',\n  \uFF39: 'Y',\n  \uFF3A: 'Z',\n  \uFF41: 'a',\n  \uFF42: 'b',\n  \uFF43: 'c',\n  \uFF44: 'd',\n  \uFF45: 'e',\n  \uFF46: 'f',\n  \uFF47: 'g',\n  \uFF48: 'h',\n  \uFF49: 'i',\n  \uFF4A: 'j',\n  \uFF4B: 'k',\n  \uFF4C: 'l',\n  \uFF4D: 'm',\n  \uFF4E: 'n',\n  \uFF4F: 'o',\n  \uFF50: 'p',\n  \uFF51: 'q',\n  \uFF52: 'r',\n  \uFF53: 's',\n  \uFF54: 't',\n  \uFF55: 'u',\n  \uFF56: 'v',\n  \uFF57: 'w',\n  \uFF58: 'x',\n  \uFF59: 'y',\n  \uFF5A: 'z',\n  '\uFF10': '0',\n  '\uFF11': '1',\n  '\uFF12': '2',\n  '\uFF13': '3',\n  '\uFF14': '4',\n  '\uFF15': '5',\n  '\uFF16': '6',\n  '\uFF17': '7',\n  '\uFF18': '8',\n  '\uFF19': '9'\n};\n\nexport function convertCharsToHalfWidth(str: string) {\n  const convertedChars = str.split('').map(char => {\n    return conversionMap[char] ?? char;\n  });\n\n  return convertedChars.join('');\n}\n\nexport function convertNumbersToHalfWidth(str: string) {\n  var fullwidth = '\uFF10\uFF11\uFF12\uFF13\uFF14\uFF15\uFF16\uFF17\uFF18\uFF19\uFF0F';\n  var halfwidth = '0123456789/';\n\n  for (var i = 0; i < 10; ++i) {\n    str = str.replace(\n      new RegExp(fullwidth.charAt(i), 'g'),\n      halfwidth.charAt(i)\n    );\n  }\n\n  return str;\n}\n", "import '../../types.d';\n// @ts-ignore\nimport html from './template.html'\n\nimport { addValidation } from '../../shared/validation';\nimport { registerMessages } from '../../shared/translations';\nimport * as i18n from './i18n';\nimport { convertCharsToHalfWidth } from '../../shared/char-width-utils';\nregisterMessages(i18n);\n\nexport const render: KomojuRenderFunction = (root, paymentMethod) => {\n  root.innerHTML = html;\n\n  // All fields are required.\n  root.querySelectorAll('input').forEach(element => {\n    addValidation(i18n, element, (input) => {\n      if (input.value === '') return 'bt.error.required';\n      return null;\n    });\n  });\n\n  // Automatically convert full-width kana to half-width.\n  root.querySelectorAll('.kana').forEach(element => {\n    element.addEventListener('input', (event) => {\n      const input = event.target as HTMLInputElement;\n\n      // This \"ime\" data comes from komoju-host-element.ts. It lets us avoid messing up\n      // customer input during IME composition.\n      if (input.dataset.ime === 'active') return;\n\n      input.value = convertCharsToHalfWidth(input.value);\n    });\n  });\n}\n\nexport const paymentDetails: KomojuPaymentDetailsFunction = (root, _paymentMethod) => {\n  const firstname = root.querySelector('#bt-firstname')! as HTMLInputElement;\n  const lastname = root.querySelector('#bt-lastname')! as HTMLInputElement;\n  const firstnameKana = root.querySelector('#bt-firstname-kana')! as HTMLInputElement;\n  const lastnameKana = root.querySelector('#bt-lastname-kana')! as HTMLInputElement;\n  const email = root.querySelector('#bt-email')! as HTMLInputElement;\n  const phone = root.querySelector('#bt-phone')! as HTMLInputElement;\n\n  return {\n    type: 'bank_transfer',\n    email: email.value,\n    family_name: lastname.value,\n    family_name_kana: lastnameKana.value,\n    given_name: firstname.value,\n    given_name_kana: firstnameKana.value,\n    phone: phone.value,\n  }\n}\n"],
  "mappings": "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",
  "names": ["input"]
}
