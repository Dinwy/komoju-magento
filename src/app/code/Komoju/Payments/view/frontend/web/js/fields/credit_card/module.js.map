{
  "version": 3,
  "sources": ["../../../src/fields/credit_card/komoju-field-icon-element.ts", "../../../src/shared/char-width-utils.ts", "../../../src/shared/validation.ts", "../../../src/fields/credit_card/card-number-utils.ts", "../../../src/shared/translations.ts", "../../../src/fields/credit_card/i18n.ts", "../../../src/fields/credit_card/module.ts"],
  "sourcesContent": ["// @ts-ignore\nimport html from './komoju-field-icon.html'\n\n// This <komoju-field-icon> element is only used for credit card.\n//\n// It lets us show the brand icons on the right side of an input element\n// without requiring sensitive DOM structure and CSS.\n//\n// Not having to worry about the DOM structure and CSS makes it easier to\n// allow custom CSS to be applied to the input elements.\nexport default class KomojuFieldIconElement extends HTMLElement {\n  static ICON_WIDTH = 42;\n  static ICON_GAP = 4;\n  static ICON_SWAP_INTERVAL = 5000;\n\n  static get observedAttributes() {\n    return ['icon', 'for'];\n  }\n\n  // The element that this icon is for. Probably always an <input> element.\n  get target() {\n    const targetId = this.getAttribute('for');\n    const root = this.getRootNode() as HTMLElement;\n    if (!targetId || !root || !root['querySelector']) return undefined;\n    else return root.querySelector(`#${targetId}`) as HTMLElement;\n  }\n  set target(target: HTMLElement | undefined) {\n    if (target) this.setAttribute('for', target.id);\n    else this.setAttribute('for', '');\n  }\n\n  get icon() {\n    return this.getAttribute('icon') || '';\n  }\n  set icon(value: string) {\n    this.setAttribute('icon', value);\n  }\n\n  resizeObserver?: ResizeObserver;\n\n  // When there's too many icons to fit in the container, we hide some of them.\n  // The 'icons' attribute holds the full list of icons, and 'visibleIcons' holds\n  // the list of icons that are currently visible.\n  visibleIcons: string[] = [];\n\n  // When we truncate icons, we want to show the hidden icons one at a time.\n  iconSwapTimeout?: unknown;\n\n  constructor() {\n    super();\n    const root = this.attachShadow({ mode: 'open' });\n    root.innerHTML = html;\n  }\n\n  connectedCallback() {\n    this.style.width = '0';\n    this.style.height = '0';\n\n    const parent = this.parentElement;\n    if (!parent) return;\n\n    this.resizeObserver = new ResizeObserver(() => {\n      this.reposition();\n    });\n    this.resizeObserver!.observe(parent);\n    this.reposition();\n    setTimeout(() => this.reposition(), 100);\n  }\n\n  disconnectedCallback() {\n    this.resizeObserver?.disconnect();\n    this.resizeObserver = undefined;\n  }\n \n  attributeChangedCallback(name: string, oldValue: string | null, newValue: string) {\n    if (name === 'icon') {\n      const container = this.shadowRoot?.getElementById('komoju-field-icon');\n      if (!container) throw new Error('KOMOJU Fields bug: field icon container missing');\n      if (oldValue === newValue) return;\n\n      const icons = newValue.split(/\\s+/);\n      this.updateVisibleIcons(icons);\n    }\n    else if (name === 'for') {\n      this.reposition();\n    }\n  }\n\n  // Sometimes there can be too many icons and they cover the input field.\n  // To account for this, we will hide some icons and then cycle through the hidden ones,\n  // showing them one at a time.\n  updateVisibleIcons(icons: string[]) {\n    const container = this.shadowRoot?.getElementById('komoju-field-icon');\n    const target = this.target;\n    if (!target || !container) return;\n\n    // If icons will be more than half of the target input's width, we'll chop some icons.\n    const iconsWidth = icons.length * (KomojuFieldIconElement.ICON_WIDTH + KomojuFieldIconElement.ICON_GAP);\n    const maxWidth = target.offsetWidth / 2;\n    if (iconsWidth > maxWidth) {\n      const hiddenIconIndex = Math.floor(maxWidth / (KomojuFieldIconElement.ICON_WIDTH + KomojuFieldIconElement.ICON_GAP));\n      const allIcons = icons;\n      icons = icons.slice(0, hiddenIconIndex);\n\n      // Here we set up a setTimeout to show the hidden icons one by one.\n      // This is recursive - we will call updateVisibleIcons again to rotate the icons.\n      if (this.iconSwapTimeout) clearTimeout(this.iconSwapTimeout as number);\n      this.iconSwapTimeout = setTimeout(() => {\n        // Shift each icon to the right by one, and move the hidden icon to the front.\n        let carry = allIcons[hiddenIconIndex - 1];\n        for (let i = hiddenIconIndex - 1; i < allIcons.length - 1; i += 1) {\n          const temp = allIcons[i + 1];\n          allIcons[i + 1] = carry;\n          carry = temp;\n        }\n        allIcons[hiddenIconIndex - 1] = carry;\n\n        this.updateVisibleIcons(allIcons);\n      }, KomojuFieldIconElement.ICON_SWAP_INTERVAL);\n    } else if (this.iconSwapTimeout) {\n      clearTimeout(this.iconSwapTimeout as number);\n      this.iconSwapTimeout = undefined;\n    }\n\n    const oldIcons = this.visibleIcons;\n    const newIcons = icons;\n    if (oldIcons === newIcons) return;\n    const removedIcons = oldIcons.filter((icon) => !newIcons.includes(icon));\n\n    this.visibleIcons = icons;\n\n    // First, add elements for new icons we've never seen before\n    for (const icon of newIcons) {\n      const existing = container.querySelector(`img[src=\"${icon}\"]`) as HTMLImageElement;\n      if (existing) {\n        existing.style.opacity = '1';\n        continue;\n      }\n\n      const img = document.createElement('img');\n      img.src = icon;\n      img.width = KomojuFieldIconElement.ICON_WIDTH;\n      container.append(img);\n      img.style.opacity = '0';\n      setTimeout(() => img.style.opacity = '1', 100);\n    }\n\n    // Then, remove elements for icons that are no longer present\n    for (const icon of removedIcons) {\n      const img = container.querySelector(`img[src=\"${icon}\"]`) as HTMLImageElement;\n      img.style.opacity = '0';\n      img.style.marginRight = '0';\n    }\n\n    // Finally, reposition the icons\n    let position = 0;\n    for (let i = this.visibleIcons.length - 1; i >= 0; i -= 1) {\n      const icon = this.visibleIcons[i];\n      const img = container.querySelector(`img[src=\"${icon}\"]`) as HTMLImageElement;\n      img.style.marginRight = `${position * (KomojuFieldIconElement.ICON_WIDTH + KomojuFieldIconElement.ICON_GAP)}px`;\n      position += 1;\n    }\n  }\n\n  // This is for positioning the container element relative to the target input.\n  // With this, we can show the icons on the right side of the input without\n  // requiring the input to have a specific DOM structure or CSS.\n  reposition() {\n    const parent = this.parentElement;\n    const target = this.target;\n    const container = this.shadowRoot?.getElementById('komoju-field-icon');\n    if (!target || !parent || !container) return;\n\n    container.style.top = `${target.offsetTop}px`;\n    container.style.right = `${parent.offsetWidth - target.offsetWidth - target.offsetLeft}px`;\n    container.style.height = `${target.offsetHeight}px`;\n\n    const targetStyle = window.getComputedStyle(target);\n\n    container.style.paddingRight = targetStyle.paddingRight;\n    container.style.paddingTop = targetStyle.paddingTop;\n    container.style.paddingBottom = targetStyle.paddingBottom;\n\n    const icons = this.getAttribute('icon')?.split(/\\s+/) || [];\n    this.updateVisibleIcons(icons);\n  }\n}\n", "const conversionMap: any = {\n  \u30AC: '\uFF76\uFF9E',\n  \u30AE: '\uFF77\uFF9E',\n  \u30B0: '\uFF78\uFF9E',\n  \u30B2: '\uFF79\uFF9E',\n  \u30B4: '\uFF7A\uFF9E',\n  \u30B6: '\uFF7B\uFF9E',\n  \u30B8: '\uFF7C\uFF9E',\n  \u30BA: '\uFF7D\uFF9E',\n  \u30BC: '\uFF7E\uFF9E',\n  \u30BE: '\uFF7F\uFF9E',\n  \u30C0: '\uFF80\uFF9E',\n  \u30C2: '\uFF81\uFF9E',\n  \u30C5: '\uFF82\uFF9E',\n  \u30C7: '\uFF83\uFF9E',\n  \u30C9: '\uFF84\uFF9E',\n  \u30D0: '\uFF8A\uFF9E',\n  \u30D3: '\uFF8B\uFF9E',\n  \u30D6: '\uFF8C\uFF9E',\n  \u30D9: '\uFF8D\uFF9E',\n  \u30DC: '\uFF8E\uFF9E',\n  \u30D1: '\uFF8A\uFF9F',\n  \u30D4: '\uFF8B\uFF9F',\n  \u30D7: '\uFF8C\uFF9F',\n  \u30DA: '\uFF8D\uFF9F',\n  \u30DD: '\uFF8E\uFF9F',\n  \u30F4: '\uFF73\uFF9E',\n  \u30F7: '\uFF9C\uFF9E',\n  \u30FA: '\uFF66\uFF9E',\n  \u30A2: '\uFF71',\n  \u30A4: '\uFF72',\n  \u30A6: '\uFF73',\n  \u30A8: '\uFF74',\n  \u30AA: '\uFF75',\n  \u30AB: '\uFF76',\n  \u30AD: '\uFF77',\n  \u30AF: '\uFF78',\n  \u30B1: '\uFF79',\n  \u30B3: '\uFF7A',\n  \u30B5: '\uFF7B',\n  \u30B7: '\uFF7C',\n  \u30B9: '\uFF7D',\n  \u30BB: '\uFF7E',\n  \u30BD: '\uFF7F',\n  \u30BF: '\uFF80',\n  \u30C1: '\uFF81',\n  \u30C4: '\uFF82',\n  \u30C6: '\uFF83',\n  \u30C8: '\uFF84',\n  \u30CA: '\uFF85',\n  \u30CB: '\uFF86',\n  \u30CC: '\uFF87',\n  \u30CD: '\uFF88',\n  \u30CE: '\uFF89',\n  \u30CF: '\uFF8A',\n  \u30D2: '\uFF8B',\n  \u30D5: '\uFF8C',\n  \u30D8: '\uFF8D',\n  \u30DB: '\uFF8E',\n  \u30DE: '\uFF8F',\n  \u30DF: '\uFF90',\n  \u30E0: '\uFF91',\n  \u30E1: '\uFF92',\n  \u30E2: '\uFF93',\n  \u30E4: '\uFF94',\n  \u30E6: '\uFF95',\n  \u30E8: '\uFF96',\n  \u30E9: '\uFF97',\n  \u30EA: '\uFF98',\n  \u30EB: '\uFF99',\n  \u30EC: '\uFF9A',\n  \u30ED: '\uFF9B',\n  \u30EF: '\uFF9C',\n  \u30F2: '\uFF66',\n  \u30F3: '\uFF9D',\n  \u30A1: '\uFF67',\n  \u30A3: '\uFF68',\n  \u30A5: '\uFF69',\n  \u30A7: '\uFF6A',\n  \u30A9: '\uFF6B',\n  \u30C3: '\uFF6F',\n  \u30E3: '\uFF6C',\n  \u30E5: '\uFF6D',\n  \u30E7: '\uFF6E',\n  '\u3002': '\uFF61',\n  '\u3001': '\uFF64',\n  \u30FC: '\uFF70',\n  '\u2212': '-',\n  '\uFF08': '(',\n  '\uFF09': ')',\n  '\u300C': '\uFF62',\n  '\u300D': '\uFF63',\n  '\u30FB': '\uFF65',\n  '\u3000': ' ',\n  \uFF21: 'A',\n  \uFF22: 'B',\n  \uFF23: 'C',\n  \uFF24: 'D',\n  \uFF25: 'E',\n  \uFF26: 'F',\n  \uFF27: 'G',\n  \uFF28: 'H',\n  \uFF29: 'I',\n  \uFF2A: 'J',\n  \uFF2B: 'K',\n  \uFF2C: 'L',\n  \uFF2D: 'M',\n  \uFF2E: 'N',\n  \uFF2F: 'O',\n  \uFF30: 'P',\n  \uFF31: 'Q',\n  \uFF32: 'R',\n  \uFF33: 'S',\n  \uFF34: 'T',\n  \uFF35: 'U',\n  \uFF36: 'V',\n  \uFF37: 'W',\n  \uFF38: 'X',\n  \uFF39: 'Y',\n  \uFF3A: 'Z',\n  \uFF41: 'a',\n  \uFF42: 'b',\n  \uFF43: 'c',\n  \uFF44: 'd',\n  \uFF45: 'e',\n  \uFF46: 'f',\n  \uFF47: 'g',\n  \uFF48: 'h',\n  \uFF49: 'i',\n  \uFF4A: 'j',\n  \uFF4B: 'k',\n  \uFF4C: 'l',\n  \uFF4D: 'm',\n  \uFF4E: 'n',\n  \uFF4F: 'o',\n  \uFF50: 'p',\n  \uFF51: 'q',\n  \uFF52: 'r',\n  \uFF53: 's',\n  \uFF54: 't',\n  \uFF55: 'u',\n  \uFF56: 'v',\n  \uFF57: 'w',\n  \uFF58: 'x',\n  \uFF59: 'y',\n  \uFF5A: 'z',\n  '\uFF10': '0',\n  '\uFF11': '1',\n  '\uFF12': '2',\n  '\uFF13': '3',\n  '\uFF14': '4',\n  '\uFF15': '5',\n  '\uFF16': '6',\n  '\uFF17': '7',\n  '\uFF18': '8',\n  '\uFF19': '9'\n};\n\nexport function convertCharsToHalfWidth(str: string) {\n  const convertedChars = str.split('').map(char => {\n    return conversionMap[char] ?? char;\n  });\n\n  return convertedChars.join('');\n}\n\nexport function convertNumbersToHalfWidth(str: string) {\n  var fullwidth = '\uFF10\uFF11\uFF12\uFF13\uFF14\uFF15\uFF16\uFF17\uFF18\uFF19\uFF0F';\n  var halfwidth = '0123456789/';\n\n  for (var i = 0; i < 10; ++i) {\n    str = str.replace(\n      new RegExp(fullwidth.charAt(i), 'g'),\n      halfwidth.charAt(i)\n    );\n  }\n\n  return str;\n}\n", "// Adds validation to an input element.\nexport function addValidation<Translations extends I18n>(\n  _i18n: Translations, // Used only by typescript to compile-time catch missing translations.\n  input: HTMLInputElement,\n  callback: (input: HTMLInputElement) => keyof Translations['en'] | null\n) {\n  // Add a class so that we know this input has validation.\n  input.classList.add('has-validation');\n\n  // Tiny detail: if the user has never inputted anything, we don't want to run validations at all\n  // at the risk of showing an error message when the user is just clicking around.\n  input.addEventListener('input', () => {\n    input.dataset.validationDirty = 'true';\n  });\n\n  // Validation function. This will be called on 'blur' and also on a custom 'validate' event.\n  const validate = (event: Event) => {\n    const input = event.target as HTMLInputElement;\n\n    const errorMessageKey = callback(input);\n\n    if (errorMessageKey) {\n      showError(_i18n, input, errorMessageKey);\n    }\n  };\n  input.addEventListener('blur', (event) => {\n    if (input.dataset.validationDirty !== 'true') return;\n    else return validate(event);\n  });\n  input.addEventListener('validate', validate);\n\n  // When the user focuses on the input, remove all error artifacts.\n  input.addEventListener('focus', (event) => {\n    const input = event.target as HTMLInputElement;\n    clearErrors(input);\n  });\n}\n\nexport function showError<Translations extends I18n>(\n  _i18n: Translations, // Used only by typescript to compile-time catch missing translations.\n  input: HTMLInputElement,\n  messageKey: keyof Translations['en']\n) {\n  input.classList.add('invalid');\n  const key = messageKey as string;\n\n  // We don't want to show the same error twice!\n  const container = input.parentElement;\n  const dupeSelector = `komoju-error:not(.removing) > komoju-i18n[key=\"${key}\"]`;\n  if (container?.querySelector(dupeSelector)) {\n    return;\n  }\n\n  container?.append(createErrorElement(messageKey as string));\n}\n\nexport function clearErrors(input: HTMLInputElement) {\n  input.classList.remove('invalid');\n  input.parentElement?.querySelectorAll('komoju-error:not(.removing)').forEach((element) => {\n    element.remove();\n  });\n}\n\n// Runs validations on an <input> element.\nexport function runValidation(input: HTMLInputElement) {\n  // Fire the 'validate' custom event.\n  input.dispatchEvent(new CustomEvent('validate'));\n\n  // If there's an error message, return it.\n  const errorMessage = input.parentElement?.querySelector('komoju-error:not(.removing)')?.textContent;\n  return errorMessage ?? null;\n}\n\n// Creates the error message element that appears under an invalid input.\n// Mainly just called by addValidation().\nexport function createErrorElement(messageKey: string) {\n  const el = window.document.createElement('komoju-error');\n  const i18nEl = window.document.createElement('komoju-i18n') as KomojuI18nElement;\n  i18nEl.key = messageKey;\n  el.appendChild(i18nEl);\n  return el;\n}\n", "type CardType = 'visa' | 'mastercard' | 'amex' | 'jcb' | 'jcb15' | 'diner' | 'discover' | 'unionpay' | 'unknown';\n\nexport function cardTypeToKomojuSubtype(type: CardType) {\n  if (type === 'amex') return 'american_express';\n  if (type === 'diner') return 'diners_club';\n  if (type === 'jcb15') return 'jcb';\n  if (type === 'mastercard') return 'master';\n  return type;\n}\n\nexport function insertSpaceEvery4Characters(str: string) {\n  return str.replace(/(.{4})/g, '$1 ').trim();\n}\n\nexport function cardNumberMaxLength(type: CardType) {\n  if (type == 'diner') {\n    return 16;\n  } else if (type == 'amex') {\n    return 17;\n  } else {\n    return 23;\n  }\n}\n\nexport function formatCardNumber(value: string, type: CardType) {\n  if (\n    type == 'unknown' ||\n    type == 'visa' ||\n    type == 'jcb' ||\n    type == 'mastercard'\n  ) {\n    return insertSpaceEvery4Characters(value);\n  } else {\n    return value\n      .replace(/(.{4})/, '$1 ')\n      .replace(/(.{11})/, '$1 ')\n      .trim();\n  }\n}\n\nexport function removeNonDigits(value: string) {\n  return value.replace(/[^0-9( \\/ )]+/g, '');\n}\n\n// insert \"/\" after the first 2 digits, if applicable\nexport function insertSlash(value: string) {\n  const hasSlash = value.includes('/');\n  const hasFullMonth = value.length >= 2;\n\n  if (hasFullMonth && !hasSlash) {\n    let yearStart = value.lastIndexOf(' ');\n    if (yearStart === -1) yearStart = 2;\n\n    const month = value.slice(0, 2);\n    const year = value.slice(yearStart, value.length);\n\n    return `${month} / ${year}`;\n  }\n\n  return value;\n}\n\n// remove \"/\" after the first 2 digits, if applicable\nexport function removeSlash(value: string) {\n  return value.endsWith('/') ? value.replace(/[^0-9]+/g, '') : value;\n}\n\nexport const cardTypeRegex = {\n  amex: /^3[47]\\d{0,13}/,\n  diner: /^3(?:0([0-5]|9)|[689]\\d?)\\d{0,11}/,\n  mastercard: /^(5[1-5]\\d{0,2}|22[2-9]\\d{0,1}|2[3-7]\\d{0,2})\\d{0,12}/,\n  jcb15: /^(?:2131|1800)\\d{0,11}/,\n  jcb: /^(?:35)\\d{0,17}/,\n  visa: /^4\\d{0,18}/\n};\n\nexport function cardType(value: string): CardType {\n  if (cardTypeRegex.amex.exec(value)) {\n    return 'amex';\n  } else if (cardTypeRegex.diner.exec(value)) {\n    return 'diner';\n  } else if (cardTypeRegex.mastercard.exec(value)) {\n    return 'mastercard';\n  } else if (cardTypeRegex.jcb15.exec(value)) {\n    return 'jcb15';\n  } else if (cardTypeRegex.jcb.exec(value)) {\n    return 'jcb';\n  } else if (cardTypeRegex.visa.exec(value)) {\n    return 'visa';\n  } else {\n    return 'unknown';\n  }\n}\n\nexport function luhnCheck(cardNumber: string) {\n  // accept only digits and spaces\n  if (/[^0-9\\s]+/.test(cardNumber)) {\n    return false;\n  }\n\n  let sum = 0;\n  let shouldDouble = false;\n  cardNumber = cardNumber.replace(/\\D/g, '');\n  const length = cardNumber.length;\n\n  // iterating backwards, double every second digit\n  for (let i = length - 1; i >= 0; --i) {\n    let digit = parseInt(cardNumber.charAt(i), 10);\n\n    // double. if doubled digit is > 9, subtract 9\n    if (shouldDouble && (digit *= 2) > 9) {\n      digit -= 9;\n    }\n\n    sum += digit;\n    shouldDouble = !shouldDouble;\n  }\n\n  return sum % 10 === 0;\n}\n", "declare let window: WindowWithKomojuGlobals;\n\n// Call this to add messages to the registry.\n// Individual payment method modules can do this to add their own messages.\n// That way, we avoid needing to load all messages for every payment method upfront.\nexport function registerMessages(messages: I18n) {\n  if (!window.komojuTranslations) {\n    window.komojuTranslations = { 'en': {}, 'ja': {} };\n  }\n\n  for (const lang of Object.keys(window.komojuTranslations)) {\n    window.komojuTranslations[lang] = {\n      ...window.komojuTranslations[lang],\n      ...messages[lang],\n    };\n  }\n}\n", "export const en = {\n  'cc.label.cardholder-name': 'Cardholder name',\n  'cc.label.card-number': 'Card number',\n  'cc.label.expiration': 'Expiration',\n  'cc.label.cvc': 'CVC',\n  'cc.error.required': 'Required',\n  'cc.error.incomplete': 'Please input the full expiration date',\n  'cc.error.please_use_half_width': 'Please use half-width characters',\n  'cc.error.invalid-number': 'Invalid number',\n  'cc.error.expired': 'Card is expired',\n  'cc.error.invalid-month': 'Month must be between 1 and 12',\n  'cc.error.unsupported-brand': 'Unsupported card brand',\n};\n\nexport const ja: typeof en = {\n  'cc.label.cardholder-name': '\u30AB\u30FC\u30C9\u6240\u6709\u8005\u540D',\n  'cc.label.card-number': '\u30AB\u30FC\u30C9\u756A\u53F7',\n  'cc.label.expiration': '\u6709\u52B9\u671F\u9650',\n  'cc.label.cvc': '\u30BB\u30AD\u30E5\u30EA\u30C6\u30A3\u30B3\u30FC\u30C9',\n  'cc.error.required': '\u5FC5\u9808\u9805\u76EE\u3067\u3059',\n  'cc.error.incomplete': '\u6709\u52B9\u671F\u9650\u3092\u6B63\u3057\u304F\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044',\n  'cc.error.please_use_half_width': '\u534A\u89D2\u82F1\u6570\u5B57\u30FB\u8A18\u53F7\u306E\u307F\u6709\u52B9\u3067\u3059',\n  'cc.error.invalid-number': '\u30AB\u30FC\u30C9\u756A\u53F7\u304C\u6B63\u3057\u304F\u3042\u308A\u307E\u305B\u3093',\n  'cc.error.expired': '\u30AB\u30FC\u30C9\u306E\u6709\u52B9\u671F\u9650\u304C\u5207\u308C\u3066\u3044\u307E\u3059',\n  'cc.error.invalid-month': '\u6708\u306F1\u304B\u308912\u306E\u9593\u3067\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044',\n  'cc.error.unsupported-brand': '\u5BFE\u5FDC\u3057\u3066\u3044\u306A\u3044\u30AF\u30EC\u30B8\u30C3\u30C8\u30AB\u30FC\u30C9\u30D6\u30E9\u30F3\u30C9\u3067\u3059',\n}\n", "import '../../types.d';\nimport KomojuFieldIconElement from './komoju-field-icon-element';\n// @ts-ignore\nimport html from './template.html'\nimport { convertNumbersToHalfWidth } from '../../shared/char-width-utils';\nimport { addValidation, showError, clearErrors } from '../../shared/validation';\nimport {\n  cardType,\n  formatCardNumber,\n  removeNonDigits,\n  insertSlash,\n  removeSlash,\n  cardNumberMaxLength,\n  cardTypeToKomojuSubtype,\n  luhnCheck,\n} from './card-number-utils';\n\nimport { registerMessages } from '../../shared/translations';\nimport * as i18n from './i18n';\nregisterMessages(i18n);\n\nwindow.customElements.define('komoju-field-icon', KomojuFieldIconElement);\n\nexport const render: KomojuRenderFunction = (root, paymentMethod) => {\n  root.innerHTML = html;\n  initializeInputs(\n    root as KomojuFieldsConfig,\n    paymentMethod as KomojuCreditCardPaymentMethod,\n  );\n}\n\nfunction initializeInputs(\n  root: KomojuFieldsConfig,\n  paymentMethod: KomojuCreditCardPaymentMethod,\n) {\n  // Card holder name validation: just make sure it's not empty\n  const name = document.getElementById('cc-name')! as HTMLInputElement;\n  addValidation(i18n, name, (input) => {\n    if (input.value === '') return 'cc.error.required';\n    if (/[^\\x01-\\x7E]/.test(input.value)) return 'cc.error.please_use_half_width';\n    return null;\n  });\n\n  // Card number icon\n  const cardIcon = document.getElementById('cc-icon')! as KomojuFieldIconElement;\n  const defaultCardImage = `${root.komojuCdn}/static/credit_card_number.svg`;\n  const supportedBrandImages = paymentMethod.brands.map((brand) => {\n    return `https://komoju.com/payment_methods/credit_card.svg?brands=${brand}`;\n  }).join(' ');\n  cardIcon.icon = supportedBrandImages;\n\n  // Card number format: 1234 5678 9012 3456 (sometimes more or less digits)\n  const number = document.getElementById('cc-number')! as HTMLInputElement;\n  number.addEventListener('input', (event) => {\n    const input = event.target as HTMLInputElement;\n    if (input.dataset.ime === 'active') return;\n    let value = input.value;\n\n    value = convertNumbersToHalfWidth(value).replace(/\\D/g, '');\n    if (value.length === 0) {\n      clearErrors(input);\n    }\n\n    const type = cardType(value);\n\n    input.maxLength = cardNumberMaxLength(type);\n    input.value = formatCardNumber(value, type);\n    input.dataset.brand = type;\n\n    // Update the card icons based on detected brand\n    const brand = cardTypeToKomojuSubtype(type);\n    if (type === 'unknown') {\n      // Most brands are identifiable after 3 characters\n      // Also show default if brand is unsupported\n      if (value.length < 3) {\n        cardIcon.icon = supportedBrandImages;\n      } else {\n        cardIcon.icon = defaultCardImage;\n      }\n    }\n    else if (paymentMethod.brands.includes(brand)) {\n      cardIcon.icon = `https://komoju.com/payment_methods/credit_card.svg?brands=${brand}`;\n      clearErrors(input);\n    }\n    else {\n      cardIcon.icon = supportedBrandImages;\n      showError(i18n, input, 'cc.error.unsupported-brand');\n    }\n  });\n\n  // Card number validation: luhn check and brand support\n  addValidation(i18n, number, (input) => {\n    const value = input.value.replace(/\\D/g, '');\n    if (value === '') return 'cc.error.required';\n    if (!luhnCheck(value)) return 'cc.error.invalid-number';\n\n    const type = cardType(value);\n    const brand = cardTypeToKomojuSubtype(type);\n    if (type === 'unknown') return 'cc.error.unsupported-brand';\n    if (!paymentMethod.brands.includes(brand)) return 'cc.error.unsupported-brand';\n\n    return null;\n  });\n\n  // Expiration date\n  const exp = document.getElementById('cc-exp')! as HTMLInputElement;\n  let lastExpValue = exp.value;\n\n  // Format: MM / YY. We automatically insert and remove the slash.\n  exp.addEventListener('input', (event) => {\n    const input = event.target as HTMLInputElement;\n\n    if (input.dataset.ime === 'active') return;\n\n    let value = convertNumbersToHalfWidth(input.value);\n    const addedNewCharacter = value.length > lastExpValue.length;\n\n    // Format value\n    value = removeNonDigits(value);\n    value = addedNewCharacter ? insertSlash(value) : removeSlash(value);\n\n    // Update value and store as last input\n    input.value = value;\n    lastExpValue = value;\n  });\n\n  // Format: MM / YY to for IME devices.\n  exp.addEventListener('blur', (event) => {\n    const input = event.target as HTMLInputElement;\n\n    if (input.dataset.ime === 'inactive') {\n      let value = convertNumbersToHalfWidth(input.value);\n\n      // Format value\n      value = removeNonDigits(value);\n      value = insertSlash(value);\n\n      // Update value and store as last input\n      input.value = value;\n      lastExpValue = value;\n    }\n  });\n\n  // Expiration validation: format and date\n  addValidation(i18n, exp, (input) => {\n    const mmyy = input.value.replace(/[^0-9\\/]/g, '');\n    const [month, year] = mmyy.split('/');\n\n    // Complain about incomplete expiration\n    if (\n      month == null ||\n      year == null ||\n      year.length !== 2 ||\n      month.length !== 2 ||\n      !/^\\d{2}\\/\\d{2}$/.test(mmyy)\n    ) {\n      return 'cc.error.incomplete';\n    }\n\n    const now = new Date();\n    const currentYear = parseInt(\n      now\n        .getFullYear()\n        .toString()\n        .substr(2, 2)\n    );\n    const currentMonth = now.getMonth() + 1;\n    const monthNum = parseInt(month);\n    const yearNum = parseInt(year);\n\n    // Complain if year is in the past\n    if (yearNum < currentYear) {\n      return 'cc.error.expired';\n    }\n\n    // Complain if month is in the past\n    if (yearNum === currentYear && monthNum < currentMonth) {\n      return 'cc.error.expired';\n    }\n\n    // Complain if month is past December\n    if (monthNum > 12 || monthNum <= 0) {\n      return 'cc.error.invalid-month';\n    }\n\n    return null;\n  });\n\n  // CVC\n  // Here we just want to set the helper image.\n  const cvcIcon = document.getElementById('cc-cvc-icon')! as KomojuFieldIconElement;\n  cvcIcon.icon = `${root.komojuCdn}/static/credit_card_cvc.svg`;\n\n  // CVC validation: just make sure it's not empty\n  const cvc = document.getElementById('cc-cvc')! as HTMLInputElement;\n  addValidation(i18n, cvc, (input) => {\n    if (input.value === '') return 'cc.error.required';\n    return null;\n  });\n}\n\nexport const paymentDetails: KomojuPaymentDetailsFunction = (root, _paymentMethod) => {\n  const name = root.querySelector('#cc-name') as HTMLInputElement;\n  const number = root.querySelector('#cc-number') as HTMLInputElement;\n  const expiration = root.querySelector('#cc-exp') as HTMLInputElement;\n  const cvc = root.querySelector('#cc-cvc') as HTMLInputElement;\n\n  const [month, year] = expiration.value.split('/').map(s => s.trim());\n\n  return {\n    type: 'credit_card',\n    name: name.value,\n    number: number.value.replace(/\\s+/g, ''),\n    month, year,\n    verification_value: cvc.value,\n  }\n}"],
  "mappings": "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",
  "names": ["input"]
}
